import   "3647997fd43c890593f560a94cc42fad:@babel/runtime/helpers/esm/extends";
import   "3647997fd43c890593f560a94cc42fad:@babel/runtime/helpers/esm/slicedToArray";
import   "3647997fd43c890593f560a94cc42fad:@babel/runtime/helpers/esm/objectWithoutProperties";
import   "3647997fd43c890593f560a94cc42fad:@babel/runtime/helpers/esm/defineProperty";
import   "3647997fd43c890593f560a94cc42fad:react";
import   "3647997fd43c890593f560a94cc42fad:react-dom";
import   "3647997fd43c890593f560a94cc42fad:prop-types";
import   "3647997fd43c890593f560a94cc42fad:clsx";
import   "3647997fd43c890593f560a94cc42fad:@material-ui/utils";
import   "3647997fd43c890593f560a94cc42fad:../styles/colorManipulator";
import   "3647997fd43c890593f560a94cc42fad:../styles/withStyles";
import   "3647997fd43c890593f560a94cc42fad:../utils/capitalize";
import   "3647997fd43c890593f560a94cc42fad:../Grow";
import   "3647997fd43c890593f560a94cc42fad:../Popper";
import   "3647997fd43c890593f560a94cc42fad:../utils/useForkRef";
import   "3647997fd43c890593f560a94cc42fad:../utils/unstable_useId";
import   "3647997fd43c890593f560a94cc42fad:../utils/setRef";
import   "3647997fd43c890593f560a94cc42fad:../utils/useIsFocusVisible";
import   "3647997fd43c890593f560a94cc42fad:../utils/useControlled";
import   "3647997fd43c890593f560a94cc42fad:../styles/useTheme";
function $3647997fd43c890593f560a94cc42fad$var$round(value) {
    return Math.round(value * 100000) / 100000;
}
function $3647997fd43c890593f560a94cc42fad$var$arrowGenerator() {
    return {
        '&[x-placement*="bottom"] $arrow': {
            top: 0,
            left: 0,
            marginTop: '-0.71em',
            marginLeft: 4,
            marginRight: 4,
            '&::before': {
                transformOrigin: '0 100%'
            }
        },
        '&[x-placement*="top"] $arrow': {
            bottom: 0,
            left: 0,
            marginBottom: '-0.71em',
            marginLeft: 4,
            marginRight: 4,
            '&::before': {
                transformOrigin: '100% 0'
            }
        },
        '&[x-placement*="right"] $arrow': {
            left: 0,
            marginLeft: '-0.71em',
            height: '1em',
            width: '0.71em',
            marginTop: 4,
            marginBottom: 4,
            '&::before': {
                transformOrigin: '100% 100%'
            }
        },
        '&[x-placement*="left"] $arrow': {
            right: 0,
            marginRight: '-0.71em',
            height: '1em',
            width: '0.71em',
            marginTop: 4,
            marginBottom: 4,
            '&::before': {
                transformOrigin: '0 0'
            }
        }
    };
}
var $3647997fd43c890593f560a94cc42fad$export$1155669653ed4fad = function styles(theme) {
    return {
        /* Styles applied to the Popper component. */ popper: {
            zIndex: theme.zIndex.tooltip,
            pointerEvents: 'none'
        },
        /* Styles applied to the Popper component if `interactive={true}`. */ popperInteractive: {
            pointerEvents: 'auto'
        },
        /* Styles applied to the Popper component if `arrow={true}`. */ popperArrow: $3647997fd43c890593f560a94cc42fad$var$arrowGenerator(),
        /* Styles applied to the tooltip (label wrapper) element. */ tooltip: {
            backgroundColor: $3647997fd43c890593f560a94cc42fad$import$78cd920a0798486b$9ea11009bc462ef5(theme.palette.grey[700], 0.9),
            borderRadius: theme.shape.borderRadius,
            color: theme.palette.common.white,
            fontFamily: theme.typography.fontFamily,
            padding: '4px 8px',
            fontSize: theme.typography.pxToRem(10),
            lineHeight: "".concat($3647997fd43c890593f560a94cc42fad$var$round(1.4), "em"),
            maxWidth: 300,
            wordWrap: 'break-word',
            fontWeight: theme.typography.fontWeightMedium
        },
        /* Styles applied to the tooltip (label wrapper) element if `arrow={true}`. */ tooltipArrow: {
            position: 'relative',
            margin: '0'
        },
        /* Styles applied to the arrow element. */ arrow: {
            overflow: 'hidden',
            position: 'absolute',
            width: '1em',
            height: '0.71em',
            boxSizing: 'border-box',
            color: $3647997fd43c890593f560a94cc42fad$import$78cd920a0798486b$9ea11009bc462ef5(theme.palette.grey[700], 0.9),
            '&::before': {
                content: '""',
                margin: 'auto',
                display: 'block',
                width: '100%',
                height: '100%',
                backgroundColor: 'currentColor',
                transform: 'rotate(45deg)'
            }
        },
        /* Styles applied to the tooltip (label wrapper) element if the tooltip is opened by touch. */ touch: {
            padding: '8px 16px',
            fontSize: theme.typography.pxToRem(14),
            lineHeight: "".concat($3647997fd43c890593f560a94cc42fad$var$round(16 / 14), "em"),
            fontWeight: theme.typography.fontWeightRegular
        },
        /* Styles applied to the tooltip (label wrapper) element if `placement` contains "left". */ tooltipPlacementLeft: $3647997fd43c890593f560a94cc42fad$import$1a28daa4a80cb108$9099ad97b570f7c({
            transformOrigin: 'right center',
            margin: '0 24px '
        }, theme.breakpoints.up('sm'), {
            margin: '0 14px'
        }),
        /* Styles applied to the tooltip (label wrapper) element if `placement` contains "right". */ tooltipPlacementRight: $3647997fd43c890593f560a94cc42fad$import$1a28daa4a80cb108$9099ad97b570f7c({
            transformOrigin: 'left center',
            margin: '0 24px'
        }, theme.breakpoints.up('sm'), {
            margin: '0 14px'
        }),
        /* Styles applied to the tooltip (label wrapper) element if `placement` contains "top". */ tooltipPlacementTop: $3647997fd43c890593f560a94cc42fad$import$1a28daa4a80cb108$9099ad97b570f7c({
            transformOrigin: 'center bottom',
            margin: '24px 0'
        }, theme.breakpoints.up('sm'), {
            margin: '14px 0'
        }),
        /* Styles applied to the tooltip (label wrapper) element if `placement` contains "bottom". */ tooltipPlacementBottom: $3647997fd43c890593f560a94cc42fad$import$1a28daa4a80cb108$9099ad97b570f7c({
            transformOrigin: 'center top',
            margin: '24px 0'
        }, theme.breakpoints.up('sm'), {
            margin: '14px 0'
        })
    };
};
var $3647997fd43c890593f560a94cc42fad$var$hystersisOpen = false;
var $3647997fd43c890593f560a94cc42fad$var$hystersisTimer = null;
function $3647997fd43c890593f560a94cc42fad$export$5001dc7a85ffdb80() {
    $3647997fd43c890593f560a94cc42fad$var$hystersisOpen = false;
    clearTimeout($3647997fd43c890593f560a94cc42fad$var$hystersisTimer);
}
var $3647997fd43c890593f560a94cc42fad$var$Tooltip = /*#__PURE__*/ $3647997fd43c890593f560a94cc42fad$import$f02ba03fc070e88c$ac92bb288368c37c(function Tooltip(props, ref) {
    var _props$arrow = props.arrow, arrow = _props$arrow === void 0 ? false : _props$arrow, children = props.children, classes = props.classes, _props$disableFocusLi = props.disableFocusListener, disableFocusListener = _props$disableFocusLi === void 0 ? false : _props$disableFocusLi, _props$disableHoverLi = props.disableHoverListener, disableHoverListener = _props$disableHoverLi === void 0 ? false : _props$disableHoverLi, _props$disableTouchLi = props.disableTouchListener, disableTouchListener = _props$disableTouchLi === void 0 ? false : _props$disableTouchLi, _props$enterDelay = props.enterDelay, enterDelay = _props$enterDelay === void 0 ? 100 : _props$enterDelay, _props$enterNextDelay = props.enterNextDelay, enterNextDelay = _props$enterNextDelay === void 0 ? 0 : _props$enterNextDelay, _props$enterTouchDela = props.enterTouchDelay, enterTouchDelay = _props$enterTouchDela === void 0 ? 700 : _props$enterTouchDela, idProp = props.id, _props$interactive = props.interactive, interactive = _props$interactive === void 0 ? false : _props$interactive, _props$leaveDelay = props.leaveDelay, leaveDelay = _props$leaveDelay === void 0 ? 0 : _props$leaveDelay, _props$leaveTouchDela = props.leaveTouchDelay, leaveTouchDelay = _props$leaveTouchDela === void 0 ? 1500 : _props$leaveTouchDela, onClose = props.onClose, onOpen = props.onOpen, openProp = props.open, _props$placement = props.placement, placement = _props$placement === void 0 ? 'bottom' : _props$placement, _props$PopperComponen = props.PopperComponent, PopperComponent = _props$PopperComponen === void 0 ? $3647997fd43c890593f560a94cc42fad$import$8b82f03ed338be78$9099ad97b570f7c : _props$PopperComponen, PopperProps = props.PopperProps, title = props.title, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? $3647997fd43c890593f560a94cc42fad$import$63e770bca2207d09$9099ad97b570f7c : _props$TransitionComp, TransitionProps = props.TransitionProps, other = $3647997fd43c890593f560a94cc42fad$import$e114c77af6cc4d77$9099ad97b570f7c(props, [
        "arrow",
        "children",
        "classes",
        "disableFocusListener",
        "disableHoverListener",
        "disableTouchListener",
        "enterDelay",
        "enterNextDelay",
        "enterTouchDelay",
        "id",
        "interactive",
        "leaveDelay",
        "leaveTouchDelay",
        "onClose",
        "onOpen",
        "open",
        "placement",
        "PopperComponent",
        "PopperProps",
        "title",
        "TransitionComponent",
        "TransitionProps"
    ]);
    var theme = $3647997fd43c890593f560a94cc42fad$import$d08d112fbc8a4e1d$9099ad97b570f7c();
    var _React$useState = $3647997fd43c890593f560a94cc42fad$import$f02ba03fc070e88c$f54936751fc2c51(), childNode = _React$useState[0], setChildNode = _React$useState[1];
    var _React$useState2 = $3647997fd43c890593f560a94cc42fad$import$f02ba03fc070e88c$f54936751fc2c51(null), arrowRef = _React$useState2[0], setArrowRef = _React$useState2[1];
    var ignoreNonTouchEvents = $3647997fd43c890593f560a94cc42fad$import$f02ba03fc070e88c$575893c07881cfe8(false);
    var closeTimer = $3647997fd43c890593f560a94cc42fad$import$f02ba03fc070e88c$575893c07881cfe8();
    var enterTimer = $3647997fd43c890593f560a94cc42fad$import$f02ba03fc070e88c$575893c07881cfe8();
    var leaveTimer = $3647997fd43c890593f560a94cc42fad$import$f02ba03fc070e88c$575893c07881cfe8();
    var touchTimer = $3647997fd43c890593f560a94cc42fad$import$f02ba03fc070e88c$575893c07881cfe8();
    var _useControlled = $3647997fd43c890593f560a94cc42fad$import$ec153815d5f7d5c0$9099ad97b570f7c({
        controlled: openProp,
        default: false,
        name: 'Tooltip',
        state: 'open'
    }), _useControlled2 = $3647997fd43c890593f560a94cc42fad$import$d595881c45598ae7$9099ad97b570f7c(_useControlled, 2), openState = _useControlled2[0], setOpenState = _useControlled2[1];
    var open = openState;
    var _React$useRef, isControlled;
    var id = $3647997fd43c890593f560a94cc42fad$import$e0e6653ad55e6d52$9099ad97b570f7c(idProp);
    $3647997fd43c890593f560a94cc42fad$import$f02ba03fc070e88c$7e977b4ca969aabd(function() {
        return function() {
            clearTimeout(closeTimer.current);
            clearTimeout(enterTimer.current);
            clearTimeout(leaveTimer.current);
            clearTimeout(touchTimer.current);
        };
    }, []);
    var handleOpen = function handleOpen1(event) {
        clearTimeout($3647997fd43c890593f560a94cc42fad$var$hystersisTimer);
        $3647997fd43c890593f560a94cc42fad$var$hystersisOpen = true; // The mouseover event will trigger for every nested element in the tooltip.
        // We can skip rerendering when the tooltip is already open.
        // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.
        setOpenState(true);
        if (onOpen) onOpen(event);
    };
    var handleEnter = function handleEnter1() {
        var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
        return function(event) {
            var childrenProps = children.props;
            if (event.type === 'mouseover' && childrenProps.onMouseOver && forward) childrenProps.onMouseOver(event);
            if (ignoreNonTouchEvents.current && event.type !== 'touchstart') return;
             // Remove the title ahead of time.
            // We don't want to wait for the next render commit.
            // We would risk displaying two tooltips at the same time (native + this one).
            if (childNode) childNode.removeAttribute('title');
            clearTimeout(enterTimer.current);
            clearTimeout(leaveTimer.current);
            if (enterDelay || $3647997fd43c890593f560a94cc42fad$var$hystersisOpen && enterNextDelay) {
                event.persist();
                enterTimer.current = setTimeout(function() {
                    handleOpen(event);
                }, $3647997fd43c890593f560a94cc42fad$var$hystersisOpen ? enterNextDelay : enterDelay);
            } else handleOpen(event);
        };
    };
    var _useIsFocusVisible = $3647997fd43c890593f560a94cc42fad$import$c345deb6b32231c9$9099ad97b570f7c(), isFocusVisible = _useIsFocusVisible.isFocusVisible, onBlurVisible = _useIsFocusVisible.onBlurVisible, focusVisibleRef = _useIsFocusVisible.ref;
    var _React$useState3 = $3647997fd43c890593f560a94cc42fad$import$f02ba03fc070e88c$f54936751fc2c51(false), childIsFocusVisible = _React$useState3[0], setChildIsFocusVisible = _React$useState3[1];
    var handleBlur = function handleBlur1() {
        if (childIsFocusVisible) {
            setChildIsFocusVisible(false);
            onBlurVisible();
        }
    };
    var handleFocus = function handleFocus1() {
        var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
        return function(event) {
            // Workaround for https://github.com/facebook/react/issues/7769
            // The autoFocus of React might trigger the event before the componentDidMount.
            // We need to account for this eventuality.
            if (!childNode) setChildNode(event.currentTarget);
            if (isFocusVisible(event)) {
                setChildIsFocusVisible(true);
                handleEnter()(event);
            }
            var childrenProps = children.props;
            if (childrenProps.onFocus && forward) childrenProps.onFocus(event);
        };
    };
    var handleClose = function handleClose1(event) {
        clearTimeout($3647997fd43c890593f560a94cc42fad$var$hystersisTimer);
        $3647997fd43c890593f560a94cc42fad$var$hystersisTimer = setTimeout(function() {
            $3647997fd43c890593f560a94cc42fad$var$hystersisOpen = false;
        }, 800 + leaveDelay);
        setOpenState(false);
        if (onClose) onClose(event);
        clearTimeout(closeTimer.current);
        closeTimer.current = setTimeout(function() {
            ignoreNonTouchEvents.current = false;
        }, theme.transitions.duration.shortest);
    };
    var handleLeave = function handleLeave1() {
        var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
        return function(event) {
            var childrenProps = children.props;
            if (event.type === 'blur') {
                if (childrenProps.onBlur && forward) childrenProps.onBlur(event);
                handleBlur();
            }
            if (event.type === 'mouseleave' && childrenProps.onMouseLeave && event.currentTarget === childNode) childrenProps.onMouseLeave(event);
            clearTimeout(enterTimer.current);
            clearTimeout(leaveTimer.current);
            event.persist();
            leaveTimer.current = setTimeout(function() {
                handleClose(event);
            }, leaveDelay);
        };
    };
    var detectTouchStart = function detectTouchStart1(event) {
        ignoreNonTouchEvents.current = true;
        var childrenProps = children.props;
        if (childrenProps.onTouchStart) childrenProps.onTouchStart(event);
    };
    var handleTouchStart = function handleTouchStart1(event) {
        detectTouchStart(event);
        clearTimeout(leaveTimer.current);
        clearTimeout(closeTimer.current);
        clearTimeout(touchTimer.current);
        event.persist();
        touchTimer.current = setTimeout(function() {
            handleEnter()(event);
        }, enterTouchDelay);
    };
    var handleTouchEnd = function handleTouchEnd1(event) {
        if (children.props.onTouchEnd) children.props.onTouchEnd(event);
        clearTimeout(touchTimer.current);
        clearTimeout(leaveTimer.current);
        event.persist();
        leaveTimer.current = setTimeout(function() {
            handleClose(event);
        }, leaveTouchDelay);
    };
    var handleUseRef = $3647997fd43c890593f560a94cc42fad$import$f0ac2eb29a789ac2$9099ad97b570f7c(setChildNode, ref);
    var handleFocusRef = $3647997fd43c890593f560a94cc42fad$import$f0ac2eb29a789ac2$9099ad97b570f7c(focusVisibleRef, handleUseRef); // can be removed once we drop support for non ref forwarding class components
    var handleOwnRef = $3647997fd43c890593f560a94cc42fad$import$f02ba03fc070e88c$e04575e0186a275b(function(instance) {
        // #StrictMode ready
        $3647997fd43c890593f560a94cc42fad$import$70528724bb2084e7$9099ad97b570f7c(handleFocusRef, $3647997fd43c890593f560a94cc42fad$import$9c1aa63963514e3e$1817be7fffc127f2(instance));
    }, [
        handleFocusRef
    ]);
    var handleRef = $3647997fd43c890593f560a94cc42fad$import$f0ac2eb29a789ac2$9099ad97b570f7c(children.ref, handleOwnRef); // There is no point in displaying an empty tooltip.
    if (title === '') open = false;
     // For accessibility and SEO concerns, we render the title to the DOM node when
    // the tooltip is hidden. However, we have made a tradeoff when
    // `disableHoverListener` is set. This title logic is disabled.
    // It's allowing us to keep the implementation size minimal.
    // We are open to change the tradeoff.
    var shouldShowNativeTitle = !open && !disableHoverListener;
    var childrenProps = $3647997fd43c890593f560a94cc42fad$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
        'aria-describedby': open ? id : null,
        title: shouldShowNativeTitle && typeof title === 'string' ? title : null
    }, other, children.props, {
        className: $3647997fd43c890593f560a94cc42fad$import$3e54c96927a352a4$9099ad97b570f7c(other.className, children.props.className),
        onTouchStart: detectTouchStart,
        ref: handleRef
    });
    var interactiveWrapperListeners = {
    };
    if (!disableTouchListener) {
        childrenProps.onTouchStart = handleTouchStart;
        childrenProps.onTouchEnd = handleTouchEnd;
    }
    if (!disableHoverListener) {
        childrenProps.onMouseOver = handleEnter();
        childrenProps.onMouseLeave = handleLeave();
        if (interactive) {
            interactiveWrapperListeners.onMouseOver = handleEnter(false);
            interactiveWrapperListeners.onMouseLeave = handleLeave(false);
        }
    }
    if (!disableFocusListener) {
        childrenProps.onFocus = handleFocus();
        childrenProps.onBlur = handleLeave();
        if (interactive) {
            interactiveWrapperListeners.onFocus = handleFocus(false);
            interactiveWrapperListeners.onBlur = handleLeave(false);
        }
    }
    var mergedPopperProps = $3647997fd43c890593f560a94cc42fad$import$f02ba03fc070e88c$fe55aea32a6cbc49(function() {
        return $3647997fd43c890593f560a94cc42fad$import$4ddfa5b020de25c6$47703990c37189f4({
            popperOptions: {
                modifiers: {
                    arrow: {
                        enabled: Boolean(arrowRef),
                        element: arrowRef
                    }
                }
            }
        }, PopperProps);
    }, [
        arrowRef,
        PopperProps
    ]);
    return(/*#__PURE__*/ $3647997fd43c890593f560a94cc42fad$import$f02ba03fc070e88c$2f8418d37d4320b9($3647997fd43c890593f560a94cc42fad$import$f02ba03fc070e88c$44f93cb792444969, null, /*#__PURE__*/ $3647997fd43c890593f560a94cc42fad$import$f02ba03fc070e88c$228915fa085e29fe(children, childrenProps), /*#__PURE__*/ $3647997fd43c890593f560a94cc42fad$import$f02ba03fc070e88c$2f8418d37d4320b9(PopperComponent, $3647997fd43c890593f560a94cc42fad$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
        className: $3647997fd43c890593f560a94cc42fad$import$3e54c96927a352a4$9099ad97b570f7c(classes.popper, interactive && classes.popperInteractive, arrow && classes.popperArrow),
        placement: placement,
        anchorEl: childNode,
        open: childNode ? open : false,
        id: childrenProps['aria-describedby'],
        transition: true
    }, interactiveWrapperListeners, mergedPopperProps), function(_ref) {
        var placementInner = _ref.placement, TransitionPropsInner = _ref.TransitionProps;
        return(/*#__PURE__*/ $3647997fd43c890593f560a94cc42fad$import$f02ba03fc070e88c$2f8418d37d4320b9(TransitionComponent, $3647997fd43c890593f560a94cc42fad$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
            timeout: theme.transitions.duration.shorter
        }, TransitionPropsInner, TransitionProps), /*#__PURE__*/ $3647997fd43c890593f560a94cc42fad$import$f02ba03fc070e88c$2f8418d37d4320b9("div", {
            className: $3647997fd43c890593f560a94cc42fad$import$3e54c96927a352a4$9099ad97b570f7c(classes.tooltip, classes["tooltipPlacement".concat($3647997fd43c890593f560a94cc42fad$import$f35500a7ba1578c4$9099ad97b570f7c(placementInner.split('-')[0]))], ignoreNonTouchEvents.current && classes.touch, arrow && classes.tooltipArrow)
        }, title, arrow ? /*#__PURE__*/ $3647997fd43c890593f560a94cc42fad$import$f02ba03fc070e88c$2f8418d37d4320b9("span", {
            className: classes.arrow,
            ref: setArrowRef
        }) : null)));
    })));
});
var $3647997fd43c890593f560a94cc42fad$export$9099ad97b570f7c = $3647997fd43c890593f560a94cc42fad$import$abdf0c7fda13cc01$9099ad97b570f7c($3647997fd43c890593f560a94cc42fad$export$1155669653ed4fad, {
    name: 'MuiTooltip',
    flip: false
})($3647997fd43c890593f560a94cc42fad$var$Tooltip);
