import   "42f08efc8d558c8be92b4d1d30011ec9:@babel/runtime/helpers/esm/extends";
import   "42f08efc8d558c8be92b4d1d30011ec9:@babel/runtime/helpers/esm/objectWithoutProperties";
import   "42f08efc8d558c8be92b4d1d30011ec9:@babel/runtime/helpers/esm/defineProperty";
import   "42f08efc8d558c8be92b4d1d30011ec9:react";
import   "42f08efc8d558c8be92b4d1d30011ec9:react-is";
import   "42f08efc8d558c8be92b4d1d30011ec9:prop-types";
import   "42f08efc8d558c8be92b4d1d30011ec9:clsx";
import   "42f08efc8d558c8be92b4d1d30011ec9:@material-ui/utils";
import   "42f08efc8d558c8be92b4d1d30011ec9:../utils/debounce";
import   "42f08efc8d558c8be92b4d1d30011ec9:../utils/ownerWindow";
import   "42f08efc8d558c8be92b4d1d30011ec9:../utils/scrollLeft";
import   "42f08efc8d558c8be92b4d1d30011ec9:../internal/animate";
import   "42f08efc8d558c8be92b4d1d30011ec9:./ScrollbarSize";
import   "42f08efc8d558c8be92b4d1d30011ec9:../styles/withStyles";
import   "42f08efc8d558c8be92b4d1d30011ec9:./TabIndicator";
import   "42f08efc8d558c8be92b4d1d30011ec9:../TabScrollButton";
import   "42f08efc8d558c8be92b4d1d30011ec9:../utils/useEventCallback";
import   "42f08efc8d558c8be92b4d1d30011ec9:../styles/useTheme";
var $42f08efc8d558c8be92b4d1d30011ec9$export$1155669653ed4fad = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            overflow: 'hidden',
            minHeight: 48,
            WebkitOverflowScrolling: 'touch',
            // Add iOS momentum scrolling.
            display: 'flex'
        },
        /* Styles applied to the root element if `orientation="vertical"`. */ vertical: {
            flexDirection: 'column'
        },
        /* Styles applied to the flex container element. */ flexContainer: {
            display: 'flex'
        },
        /* Styles applied to the flex container element if `orientation="vertical"`. */ flexContainerVertical: {
            flexDirection: 'column'
        },
        /* Styles applied to the flex container element if `centered={true}` & `!variant="scrollable"`. */ centered: {
            justifyContent: 'center'
        },
        /* Styles applied to the tablist element. */ scroller: {
            position: 'relative',
            display: 'inline-block',
            flex: '1 1 auto',
            whiteSpace: 'nowrap'
        },
        /* Styles applied to the tablist element if `!variant="scrollable"`. */ fixed: {
            overflowX: 'hidden',
            width: '100%'
        },
        /* Styles applied to the tablist element if `variant="scrollable"`. */ scrollable: {
            overflowX: 'scroll',
            // Hide dimensionless scrollbar on MacOS
            scrollbarWidth: 'none',
            // Firefox
            '&::-webkit-scrollbar': {
                display: 'none'
            }
        },
        /* Styles applied to the `ScrollButtonComponent` component. */ scrollButtons: {
        },
        /* Styles applied to the `ScrollButtonComponent` component if `scrollButtons="auto"` or scrollButtons="desktop"`. */ scrollButtonsDesktop: $42f08efc8d558c8be92b4d1d30011ec9$import$1a28daa4a80cb108$9099ad97b570f7c({
        }, theme.breakpoints.down('xs'), {
            display: 'none'
        }),
        /* Styles applied to the `TabIndicator` component. */ indicator: {
        }
    };
};
var $42f08efc8d558c8be92b4d1d30011ec9$var$Tabs = /*#__PURE__*/ $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$ac92bb288368c37c(function Tabs(props, ref) {
    var ariaLabel = props['aria-label'], ariaLabelledBy = props['aria-labelledby'], action = props.action, _props$centered = props.centered, centered = _props$centered === void 0 ? false : _props$centered, childrenProp = props.children, classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? 'div' : _props$component, _props$indicatorColor = props.indicatorColor, indicatorColor = _props$indicatorColor === void 0 ? 'secondary' : _props$indicatorColor, onChange = props.onChange, _props$orientation = props.orientation, orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation, _props$ScrollButtonCo = props.ScrollButtonComponent, ScrollButtonComponent = _props$ScrollButtonCo === void 0 ? $42f08efc8d558c8be92b4d1d30011ec9$import$f860e70bb9eef711$9099ad97b570f7c : _props$ScrollButtonCo, _props$scrollButtons = props.scrollButtons, scrollButtons = _props$scrollButtons === void 0 ? 'auto' : _props$scrollButtons, selectionFollowsFocus = props.selectionFollowsFocus, _props$TabIndicatorPr = props.TabIndicatorProps, TabIndicatorProps = _props$TabIndicatorPr === void 0 ? {
    } : _props$TabIndicatorPr, TabScrollButtonProps = props.TabScrollButtonProps, _props$textColor = props.textColor, textColor = _props$textColor === void 0 ? 'inherit' : _props$textColor, value = props.value, _props$variant = props.variant, variant = _props$variant === void 0 ? 'standard' : _props$variant, other = $42f08efc8d558c8be92b4d1d30011ec9$import$e114c77af6cc4d77$9099ad97b570f7c(props, [
        "aria-label",
        "aria-labelledby",
        "action",
        "centered",
        "children",
        "classes",
        "className",
        "component",
        "indicatorColor",
        "onChange",
        "orientation",
        "ScrollButtonComponent",
        "scrollButtons",
        "selectionFollowsFocus",
        "TabIndicatorProps",
        "TabScrollButtonProps",
        "textColor",
        "value",
        "variant"
    ]);
    var theme = $42f08efc8d558c8be92b4d1d30011ec9$import$d08d112fbc8a4e1d$9099ad97b570f7c();
    var scrollable = variant === 'scrollable';
    var isRtl = theme.direction === 'rtl';
    var vertical = orientation === 'vertical';
    var scrollStart = vertical ? 'scrollTop' : 'scrollLeft';
    var start = vertical ? 'top' : 'left';
    var end = vertical ? 'bottom' : 'right';
    var clientSize = vertical ? 'clientHeight' : 'clientWidth';
    var size = vertical ? 'height' : 'width';
    var _React$useState = $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$f54936751fc2c51(false), mounted = _React$useState[0], setMounted = _React$useState[1];
    var _React$useState2 = $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$f54936751fc2c51({
    }), indicatorStyle = _React$useState2[0], setIndicatorStyle = _React$useState2[1];
    var _React$useState3 = $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$f54936751fc2c51({
        start: false,
        end: false
    }), displayScroll = _React$useState3[0], setDisplayScroll = _React$useState3[1];
    var _React$useState4 = $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$f54936751fc2c51({
        overflow: 'hidden',
        marginBottom: null
    }), scrollerStyle = _React$useState4[0], setScrollerStyle = _React$useState4[1];
    var valueToIndex = new Map();
    var tabsRef = $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$575893c07881cfe8(null);
    var tabListRef = $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$575893c07881cfe8(null);
    var getTabsMeta = function getTabsMeta1() {
        var tabsNode = tabsRef.current;
        var tabsMeta;
        if (tabsNode) {
            var rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft
            tabsMeta = {
                clientWidth: tabsNode.clientWidth,
                scrollLeft: tabsNode.scrollLeft,
                scrollTop: tabsNode.scrollTop,
                scrollLeftNormalized: $42f08efc8d558c8be92b4d1d30011ec9$import$1b8b7d2692c2f7$7b9fb4162e4e8c7a(tabsNode, theme.direction),
                scrollWidth: tabsNode.scrollWidth,
                top: rect.top,
                bottom: rect.bottom,
                left: rect.left,
                right: rect.right
            };
        }
        var tabMeta;
        if (tabsNode && value !== false) {
            var _children = tabListRef.current.children;
            if (_children.length > 0) {
                var tab = _children[valueToIndex.get(value)];
                tabMeta = tab ? tab.getBoundingClientRect() : null;
            }
        }
        return {
            tabsMeta: tabsMeta,
            tabMeta: tabMeta
        };
    };
    var updateIndicatorState = $42f08efc8d558c8be92b4d1d30011ec9$import$3575fe9de66b2ef3$9099ad97b570f7c(function() {
        var _newIndicatorStyle;
        var _getTabsMeta = getTabsMeta(), tabsMeta = _getTabsMeta.tabsMeta, tabMeta = _getTabsMeta.tabMeta;
        var startValue = 0;
        if (tabMeta && tabsMeta) {
            if (vertical) startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;
            else {
                var correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;
                startValue = tabMeta.left - tabsMeta.left + correction;
            }
        }
        var newIndicatorStyle = (_newIndicatorStyle = {
        }, $42f08efc8d558c8be92b4d1d30011ec9$import$1a28daa4a80cb108$9099ad97b570f7c(_newIndicatorStyle, start, startValue), $42f08efc8d558c8be92b4d1d30011ec9$import$1a28daa4a80cb108$9099ad97b570f7c(_newIndicatorStyle, size, tabMeta ? tabMeta[size] : 0), _newIndicatorStyle);
        if (isNaN(indicatorStyle[start]) || isNaN(indicatorStyle[size])) setIndicatorStyle(newIndicatorStyle);
        else {
            var dStart = Math.abs(indicatorStyle[start] - newIndicatorStyle[start]);
            var dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);
            if (dStart >= 1 || dSize >= 1) setIndicatorStyle(newIndicatorStyle);
        }
    });
    var scroll = function scroll1(scrollValue) {
        $42f08efc8d558c8be92b4d1d30011ec9$import$82a803afd85a207a$9099ad97b570f7c(scrollStart, tabsRef.current, scrollValue);
    };
    var moveTabsScroll = function moveTabsScroll1(delta) {
        var scrollValue = tabsRef.current[scrollStart];
        if (vertical) scrollValue += delta;
        else {
            scrollValue += delta * (isRtl ? -1 : 1); // Fix for Edge
            scrollValue *= isRtl && $42f08efc8d558c8be92b4d1d30011ec9$import$1b8b7d2692c2f7$3174778f0b55470f() === 'reverse' ? -1 : 1;
        }
        scroll(scrollValue);
    };
    var handleStartScrollClick = function handleStartScrollClick1() {
        moveTabsScroll(-tabsRef.current[clientSize]);
    };
    var handleEndScrollClick = function handleEndScrollClick1() {
        moveTabsScroll(tabsRef.current[clientSize]);
    };
    var handleScrollbarSizeChange = $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$e04575e0186a275b(function(scrollbarHeight) {
        setScrollerStyle({
            overflow: null,
            marginBottom: -scrollbarHeight
        });
    }, []);
    var getConditionalElements = function getConditionalElements1() {
        var conditionalElements = {
        };
        conditionalElements.scrollbarSizeListener = scrollable ? /*#__PURE__*/ $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$2f8418d37d4320b9($42f08efc8d558c8be92b4d1d30011ec9$import$52821ad7b2e32785$9099ad97b570f7c, {
            className: classes.scrollable,
            onChange: handleScrollbarSizeChange
        }) : null;
        var scrollButtonsActive = displayScroll.start || displayScroll.end;
        var showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === 'desktop' || scrollButtons === 'on');
        conditionalElements.scrollButtonStart = showScrollButtons ? /*#__PURE__*/ $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$2f8418d37d4320b9(ScrollButtonComponent, $42f08efc8d558c8be92b4d1d30011ec9$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
            orientation: orientation,
            direction: isRtl ? 'right' : 'left',
            onClick: handleStartScrollClick,
            disabled: !displayScroll.start,
            className: $42f08efc8d558c8be92b4d1d30011ec9$import$3e54c96927a352a4$9099ad97b570f7c(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)
        }, TabScrollButtonProps)) : null;
        conditionalElements.scrollButtonEnd = showScrollButtons ? /*#__PURE__*/ $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$2f8418d37d4320b9(ScrollButtonComponent, $42f08efc8d558c8be92b4d1d30011ec9$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
            orientation: orientation,
            direction: isRtl ? 'left' : 'right',
            onClick: handleEndScrollClick,
            disabled: !displayScroll.end,
            className: $42f08efc8d558c8be92b4d1d30011ec9$import$3e54c96927a352a4$9099ad97b570f7c(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)
        }, TabScrollButtonProps)) : null;
        return conditionalElements;
    };
    var scrollSelectedIntoView = $42f08efc8d558c8be92b4d1d30011ec9$import$3575fe9de66b2ef3$9099ad97b570f7c(function() {
        var _getTabsMeta2 = getTabsMeta(), tabsMeta = _getTabsMeta2.tabsMeta, tabMeta = _getTabsMeta2.tabMeta;
        if (!tabMeta || !tabsMeta) return;
        if (tabMeta[start] < tabsMeta[start]) {
            // left side of button is out of view
            var nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);
            scroll(nextScrollStart);
        } else if (tabMeta[end] > tabsMeta[end]) {
            // right side of button is out of view
            var _nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);
            scroll(_nextScrollStart);
        }
    });
    var updateScrollButtonState = $42f08efc8d558c8be92b4d1d30011ec9$import$3575fe9de66b2ef3$9099ad97b570f7c(function() {
        if (scrollable && scrollButtons !== 'off') {
            var _tabsRef$current = tabsRef.current, scrollTop = _tabsRef$current.scrollTop, scrollHeight = _tabsRef$current.scrollHeight, clientHeight = _tabsRef$current.clientHeight, scrollWidth = _tabsRef$current.scrollWidth, clientWidth = _tabsRef$current.clientWidth;
            var showStartScroll;
            var showEndScroll;
            if (vertical) {
                showStartScroll = scrollTop > 1;
                showEndScroll = scrollTop < scrollHeight - clientHeight - 1;
            } else {
                var scrollLeft = $42f08efc8d558c8be92b4d1d30011ec9$import$1b8b7d2692c2f7$7b9fb4162e4e8c7a(tabsRef.current, theme.direction); // use 1 for the potential rounding error with browser zooms.
                showStartScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;
                showEndScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;
            }
            if (showStartScroll !== displayScroll.start || showEndScroll !== displayScroll.end) setDisplayScroll({
                start: showStartScroll,
                end: showEndScroll
            });
        }
    });
    $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$7e977b4ca969aabd(function() {
        var handleResize = $42f08efc8d558c8be92b4d1d30011ec9$import$823313fd4db85d55$9099ad97b570f7c(function() {
            updateIndicatorState();
            updateScrollButtonState();
        });
        var win = $42f08efc8d558c8be92b4d1d30011ec9$import$556b2e6b7545616a$9099ad97b570f7c(tabsRef.current);
        win.addEventListener('resize', handleResize);
        return function() {
            handleResize.clear();
            win.removeEventListener('resize', handleResize);
        };
    }, [
        updateIndicatorState,
        updateScrollButtonState
    ]);
    var handleTabsScroll = $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$e04575e0186a275b($42f08efc8d558c8be92b4d1d30011ec9$import$823313fd4db85d55$9099ad97b570f7c(function() {
        updateScrollButtonState();
    }));
    $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$7e977b4ca969aabd(function() {
        return function() {
            handleTabsScroll.clear();
        };
    }, [
        handleTabsScroll
    ]);
    $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$7e977b4ca969aabd(function() {
        setMounted(true);
    }, []);
    $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$7e977b4ca969aabd(function() {
        updateIndicatorState();
        updateScrollButtonState();
    });
    $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$7e977b4ca969aabd(function() {
        scrollSelectedIntoView();
    }, [
        scrollSelectedIntoView,
        indicatorStyle
    ]);
    $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$718bc1f42abf35a1(action, function() {
        return {
            updateIndicator: updateIndicatorState,
            updateScrollButtons: updateScrollButtonState
        };
    }, [
        updateIndicatorState,
        updateScrollButtonState
    ]);
    var indicator = /*#__PURE__*/ $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$2f8418d37d4320b9($42f08efc8d558c8be92b4d1d30011ec9$import$d7935c1d41efc555$9099ad97b570f7c, $42f08efc8d558c8be92b4d1d30011ec9$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
        className: classes.indicator,
        orientation: orientation,
        color: indicatorColor
    }, TabIndicatorProps, {
        style: $42f08efc8d558c8be92b4d1d30011ec9$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
        }, indicatorStyle, TabIndicatorProps.style)
    }));
    var childIndex = 0;
    var children = $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$4a1442b8e7333aeb.map(childrenProp, function(child) {
        if (!/*#__PURE__*/ $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$64e9a1defe72209(child)) return null;
        var childValue = child.props.value === undefined ? childIndex : child.props.value;
        valueToIndex.set(childValue, childIndex);
        var selected = childValue === value;
        childIndex += 1;
        return(/*#__PURE__*/ $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$228915fa085e29fe(child, {
            fullWidth: variant === 'fullWidth',
            indicator: selected && !mounted && indicator,
            selected: selected,
            selectionFollowsFocus: selectionFollowsFocus,
            onChange: onChange,
            textColor: textColor,
            value: childValue
        }));
    });
    var handleKeyDown = function handleKeyDown1(event) {
        var target = event.target; // Keyboard navigation assumes that [role="tab"] are siblings
        // though we might warn in the future about nested, interactive elements
        // as a a11y violation
        var role = target.getAttribute('role');
        if (role !== 'tab') return;
        var newFocusTarget = null;
        var previousItemKey = orientation !== "vertical" ? 'ArrowLeft' : 'ArrowUp';
        var nextItemKey = orientation !== "vertical" ? 'ArrowRight' : 'ArrowDown';
        if (orientation !== "vertical" && theme.direction === 'rtl') {
            // swap previousItemKey with nextItemKey
            previousItemKey = 'ArrowRight';
            nextItemKey = 'ArrowLeft';
        }
        switch(event.key){
            case previousItemKey:
                newFocusTarget = target.previousElementSibling || tabListRef.current.lastChild;
                break;
            case nextItemKey:
                newFocusTarget = target.nextElementSibling || tabListRef.current.firstChild;
                break;
            case 'Home':
                newFocusTarget = tabListRef.current.firstChild;
                break;
            case 'End':
                newFocusTarget = tabListRef.current.lastChild;
                break;
            default:
                break;
        }
        if (newFocusTarget !== null) {
            newFocusTarget.focus();
            event.preventDefault();
        }
    };
    var conditionalElements = getConditionalElements();
    return(/*#__PURE__*/ $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$2f8418d37d4320b9(Component, $42f08efc8d558c8be92b4d1d30011ec9$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
        className: $42f08efc8d558c8be92b4d1d30011ec9$import$3e54c96927a352a4$9099ad97b570f7c(classes.root, className, vertical && classes.vertical),
        ref: ref
    }, other), conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, /*#__PURE__*/ $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$2f8418d37d4320b9("div", {
        className: $42f08efc8d558c8be92b4d1d30011ec9$import$3e54c96927a352a4$9099ad97b570f7c(classes.scroller, scrollable ? classes.scrollable : classes.fixed),
        style: scrollerStyle,
        ref: tabsRef,
        onScroll: handleTabsScroll
    }, /*#__PURE__*/ $42f08efc8d558c8be92b4d1d30011ec9$import$f02ba03fc070e88c$2f8418d37d4320b9("div", {
        "aria-label": ariaLabel,
        "aria-labelledby": ariaLabelledBy,
        className: $42f08efc8d558c8be92b4d1d30011ec9$import$3e54c96927a352a4$9099ad97b570f7c(classes.flexContainer, vertical && classes.flexContainerVertical, centered && !scrollable && classes.centered),
        onKeyDown: handleKeyDown,
        ref: tabListRef,
        role: "tablist"
    }, children), mounted && indicator), conditionalElements.scrollButtonEnd));
});
var $42f08efc8d558c8be92b4d1d30011ec9$export$9099ad97b570f7c = $42f08efc8d558c8be92b4d1d30011ec9$import$abdf0c7fda13cc01$9099ad97b570f7c($42f08efc8d558c8be92b4d1d30011ec9$export$1155669653ed4fad, {
    name: 'MuiTabs'
})($42f08efc8d558c8be92b4d1d30011ec9$var$Tabs);
