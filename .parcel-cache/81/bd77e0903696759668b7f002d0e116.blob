import   "3ba5ec4acb0c05aecf942586f9651bfe:react";
function $3ba5ec4acb0c05aecf942586f9651bfe$export$ef0fdf876fa72776(children, mapFn) {
    var mapper = function mapper1(child) {
        return mapFn && $3ba5ec4acb0c05aecf942586f9651bfe$import$f02ba03fc070e88c$64e9a1defe72209(child) ? mapFn(child) : child;
    };
    var result = Object.create(null);
    if (children) $3ba5ec4acb0c05aecf942586f9651bfe$import$f02ba03fc070e88c$4a1442b8e7333aeb.map(children, function(c) {
        return c;
    }).forEach(function(child) {
        // run the map function here instead so that the key is the computed one
        result[child.key] = mapper(child);
    });
    return result;
}
function $3ba5ec4acb0c05aecf942586f9651bfe$export$855346859f0f33ba(prev, next) {
    prev = prev || {
    };
    next = next || {
    };
    function getValueForKey(key) {
        return key in next ? next[key] : prev[key];
    } // For each key of `next`, the list of keys to insert before that key in
    // the combined list
    var nextKeysPending = Object.create(null);
    var pendingKeys = [];
    for(var prevKey in prev){
        if (prevKey in next) {
            if (pendingKeys.length) {
                nextKeysPending[prevKey] = pendingKeys;
                pendingKeys = [];
            }
        } else pendingKeys.push(prevKey);
    }
    var i;
    var childMapping = {
    };
    for(var nextKey in next){
        if (nextKeysPending[nextKey]) for(i = 0; i < nextKeysPending[nextKey].length; i++){
            var pendingNextKey = nextKeysPending[nextKey][i];
            childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
        }
        childMapping[nextKey] = getValueForKey(nextKey);
    } // Finally, add the keys which didn't appear before any key in `next`
    for(i = 0; i < pendingKeys.length; i++)childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
    return childMapping;
}
function $3ba5ec4acb0c05aecf942586f9651bfe$var$getProp(child, prop, props) {
    return props[prop] != null ? props[prop] : child.props[prop];
}
function $3ba5ec4acb0c05aecf942586f9651bfe$export$cba72bc23453ec6d(props, onExited) {
    return $3ba5ec4acb0c05aecf942586f9651bfe$export$ef0fdf876fa72776(props.children, function(child) {
        return $3ba5ec4acb0c05aecf942586f9651bfe$import$f02ba03fc070e88c$228915fa085e29fe(child, {
            onExited: onExited.bind(null, child),
            in: true,
            appear: $3ba5ec4acb0c05aecf942586f9651bfe$var$getProp(child, 'appear', props),
            enter: $3ba5ec4acb0c05aecf942586f9651bfe$var$getProp(child, 'enter', props),
            exit: $3ba5ec4acb0c05aecf942586f9651bfe$var$getProp(child, 'exit', props)
        });
    });
}
function $3ba5ec4acb0c05aecf942586f9651bfe$export$5e710795e1c1ac79(nextProps, prevChildMapping, onExited) {
    var nextChildMapping = $3ba5ec4acb0c05aecf942586f9651bfe$export$ef0fdf876fa72776(nextProps.children);
    var children = $3ba5ec4acb0c05aecf942586f9651bfe$export$855346859f0f33ba(prevChildMapping, nextChildMapping);
    Object.keys(children).forEach(function(key) {
        var child = children[key];
        if (!$3ba5ec4acb0c05aecf942586f9651bfe$import$f02ba03fc070e88c$64e9a1defe72209(child)) return;
        var hasPrev = key in prevChildMapping;
        var hasNext = key in nextChildMapping;
        var prevChild = prevChildMapping[key];
        var isLeaving = $3ba5ec4acb0c05aecf942586f9651bfe$import$f02ba03fc070e88c$64e9a1defe72209(prevChild) && !prevChild.props.in; // item is new (entering)
        if (hasNext && (!hasPrev || isLeaving)) // console.log('entering', key)
        children[key] = $3ba5ec4acb0c05aecf942586f9651bfe$import$f02ba03fc070e88c$228915fa085e29fe(child, {
            onExited: onExited.bind(null, child),
            in: true,
            exit: $3ba5ec4acb0c05aecf942586f9651bfe$var$getProp(child, 'exit', nextProps),
            enter: $3ba5ec4acb0c05aecf942586f9651bfe$var$getProp(child, 'enter', nextProps)
        });
        else if (!hasNext && hasPrev && !isLeaving) // item is old (exiting)
        // console.log('leaving', key)
        children[key] = $3ba5ec4acb0c05aecf942586f9651bfe$import$f02ba03fc070e88c$228915fa085e29fe(child, {
            in: false
        });
        else if (hasNext && hasPrev && $3ba5ec4acb0c05aecf942586f9651bfe$import$f02ba03fc070e88c$64e9a1defe72209(prevChild)) // item hasn't changed transition states
        // copy over the last transition props;
        // console.log('unchanged', key)
        children[key] = $3ba5ec4acb0c05aecf942586f9651bfe$import$f02ba03fc070e88c$228915fa085e29fe(child, {
            onExited: onExited.bind(null, child),
            in: prevChild.props.in,
            exit: $3ba5ec4acb0c05aecf942586f9651bfe$var$getProp(child, 'exit', nextProps),
            enter: $3ba5ec4acb0c05aecf942586f9651bfe$var$getProp(child, 'enter', nextProps)
        });
    });
    return children;
}
