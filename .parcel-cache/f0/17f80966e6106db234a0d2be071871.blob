import   "dc23134aeb475e5050f8b439827fad65:@babel/runtime/helpers/esm/objectWithoutProperties";
import   "dc23134aeb475e5050f8b439827fad65:@babel/runtime/helpers/esm/extends";
import   "dc23134aeb475e5050f8b439827fad65:react";
import   "dc23134aeb475e5050f8b439827fad65:prop-types";
import   "dc23134aeb475e5050f8b439827fad65:react-dom";
import   "dc23134aeb475e5050f8b439827fad65:@material-ui/utils";
import   "dc23134aeb475e5050f8b439827fad65:@material-ui/styles";
import   "dc23134aeb475e5050f8b439827fad65:../Drawer/Drawer";
import   "dc23134aeb475e5050f8b439827fad65:../utils/ownerDocument";
import   "dc23134aeb475e5050f8b439827fad65:../utils/useEventCallback";
import   "dc23134aeb475e5050f8b439827fad65:../styles/transitions";
import   "dc23134aeb475e5050f8b439827fad65:../styles/useTheme";
import   "dc23134aeb475e5050f8b439827fad65:../transitions/utils";
import   "dc23134aeb475e5050f8b439827fad65:../NoSsr";
import   "dc23134aeb475e5050f8b439827fad65:./SwipeArea";
// trigger a native scroll.
var $dc23134aeb475e5050f8b439827fad65$var$UNCERTAINTY_THRESHOLD = 3; // px
// We can only have one node at the time claiming ownership for handling the swipe.
// Otherwise, the UX would be confusing.
// That's why we use a singleton here.
var $dc23134aeb475e5050f8b439827fad65$var$nodeThatClaimedTheSwipe = null; // Exported for test purposes.
function $dc23134aeb475e5050f8b439827fad65$export$6cfa4eec14fd8155() {
    $dc23134aeb475e5050f8b439827fad65$var$nodeThatClaimedTheSwipe = null;
}
function $dc23134aeb475e5050f8b439827fad65$var$calculateCurrentX(anchor, touches) {
    return anchor === 'right' ? document.body.offsetWidth - touches[0].pageX : touches[0].pageX;
}
function $dc23134aeb475e5050f8b439827fad65$var$calculateCurrentY(anchor, touches) {
    return anchor === 'bottom' ? window.innerHeight - touches[0].clientY : touches[0].clientY;
}
function $dc23134aeb475e5050f8b439827fad65$var$getMaxTranslate(horizontalSwipe, paperInstance) {
    return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;
}
function $dc23134aeb475e5050f8b439827fad65$var$getTranslate(currentTranslate, startLocation, open, maxTranslate) {
    return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);
}
function $dc23134aeb475e5050f8b439827fad65$var$getDomTreeShapes(element, rootNode) {
    // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129
    var domTreeShapes = [];
    while(element && element !== rootNode){
        var style = window.getComputedStyle(element);
        if (style.getPropertyValue('position') === 'absolute' || style.getPropertyValue('overflow-x') === 'hidden') domTreeShapes = [];
        else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) // Ignore the nodes that have no width.
        // Keep elements with a scroll
        domTreeShapes.push(element);
        element = element.parentElement;
    }
    return domTreeShapes;
}
function $dc23134aeb475e5050f8b439827fad65$var$findNativeHandler(_ref) {
    var domTreeShapes = _ref.domTreeShapes, start = _ref.start, current = _ref.current, anchor = _ref.anchor;
    // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175
    var axisProperties = {
        scrollPosition: {
            x: 'scrollLeft',
            y: 'scrollTop'
        },
        scrollLength: {
            x: 'scrollWidth',
            y: 'scrollHeight'
        },
        clientLength: {
            x: 'clientWidth',
            y: 'clientHeight'
        }
    };
    return domTreeShapes.some(function(shape) {
        // Determine if we are going backward or forward.
        var goingForward = current >= start;
        if (anchor === 'top' || anchor === 'left') goingForward = !goingForward;
        var axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';
        var scrollPosition = shape[axisProperties.scrollPosition[axis]];
        var areNotAtStart = scrollPosition > 0;
        var areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];
        if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) return shape;
        return null;
    });
}
var $dc23134aeb475e5050f8b439827fad65$var$iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);
var $dc23134aeb475e5050f8b439827fad65$var$transitionDurationDefault = {
    enter: $dc23134aeb475e5050f8b439827fad65$import$b1e0cdbd228fdc15$cf96e0e36f6240f8.enteringScreen,
    exit: $dc23134aeb475e5050f8b439827fad65$import$b1e0cdbd228fdc15$cf96e0e36f6240f8.leavingScreen
};
var $dc23134aeb475e5050f8b439827fad65$var$useEnhancedEffect = typeof window !== 'undefined' ? $dc23134aeb475e5050f8b439827fad65$import$f02ba03fc070e88c$3839ad89c0ec6b31 : $dc23134aeb475e5050f8b439827fad65$import$f02ba03fc070e88c$7e977b4ca969aabd;
var $dc23134aeb475e5050f8b439827fad65$var$SwipeableDrawer = /*#__PURE__*/ $dc23134aeb475e5050f8b439827fad65$import$f02ba03fc070e88c$ac92bb288368c37c(function SwipeableDrawer(inProps, ref) {
    var theme = $dc23134aeb475e5050f8b439827fad65$import$d08d112fbc8a4e1d$9099ad97b570f7c();
    var props = $dc23134aeb475e5050f8b439827fad65$import$c5d6394d37751b43$3921ac7c6261f66e({
        name: 'MuiSwipeableDrawer',
        props: $dc23134aeb475e5050f8b439827fad65$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
        }, inProps),
        theme: theme
    });
    var _props$anchor = props.anchor, anchor = _props$anchor === void 0 ? 'left' : _props$anchor, _props$disableBackdro = props.disableBackdropTransition, disableBackdropTransition = _props$disableBackdro === void 0 ? false : _props$disableBackdro, _props$disableDiscove = props.disableDiscovery, disableDiscovery = _props$disableDiscove === void 0 ? false : _props$disableDiscove, _props$disableSwipeTo = props.disableSwipeToOpen, disableSwipeToOpen = _props$disableSwipeTo === void 0 ? $dc23134aeb475e5050f8b439827fad65$var$iOS : _props$disableSwipeTo, hideBackdrop = props.hideBackdrop, _props$hysteresis = props.hysteresis, hysteresis = _props$hysteresis === void 0 ? 0.52 : _props$hysteresis, _props$minFlingVeloci = props.minFlingVelocity, minFlingVelocity = _props$minFlingVeloci === void 0 ? 450 : _props$minFlingVeloci, _props$ModalProps = props.ModalProps;
    _props$ModalProps = _props$ModalProps === void 0 ? {
    } : _props$ModalProps;
    var BackdropProps = _props$ModalProps.BackdropProps, ModalPropsProp = $dc23134aeb475e5050f8b439827fad65$import$e114c77af6cc4d77$9099ad97b570f7c(_props$ModalProps, [
        "BackdropProps"
    ]), onClose = props.onClose, onOpen = props.onOpen, open = props.open, _props$PaperProps = props.PaperProps, PaperProps = _props$PaperProps === void 0 ? {
    } : _props$PaperProps, SwipeAreaProps = props.SwipeAreaProps, _props$swipeAreaWidth = props.swipeAreaWidth, swipeAreaWidth = _props$swipeAreaWidth === void 0 ? 20 : _props$swipeAreaWidth, _props$transitionDura = props.transitionDuration, transitionDuration = _props$transitionDura === void 0 ? $dc23134aeb475e5050f8b439827fad65$var$transitionDurationDefault : _props$transitionDura, _props$variant = props.variant, variant = _props$variant === void 0 ? 'temporary' : _props$variant, other = $dc23134aeb475e5050f8b439827fad65$import$e114c77af6cc4d77$9099ad97b570f7c(props, [
        "anchor",
        "disableBackdropTransition",
        "disableDiscovery",
        "disableSwipeToOpen",
        "hideBackdrop",
        "hysteresis",
        "minFlingVelocity",
        "ModalProps",
        "onClose",
        "onOpen",
        "open",
        "PaperProps",
        "SwipeAreaProps",
        "swipeAreaWidth",
        "transitionDuration",
        "variant"
    ]);
    var _React$useState = $dc23134aeb475e5050f8b439827fad65$import$f02ba03fc070e88c$f54936751fc2c51(false), maybeSwiping = _React$useState[0], setMaybeSwiping = _React$useState[1];
    var swipeInstance = $dc23134aeb475e5050f8b439827fad65$import$f02ba03fc070e88c$575893c07881cfe8({
        isSwiping: null
    });
    var swipeAreaRef = $dc23134aeb475e5050f8b439827fad65$import$f02ba03fc070e88c$575893c07881cfe8();
    var backdropRef = $dc23134aeb475e5050f8b439827fad65$import$f02ba03fc070e88c$575893c07881cfe8();
    var paperRef = $dc23134aeb475e5050f8b439827fad65$import$f02ba03fc070e88c$575893c07881cfe8();
    var touchDetected = $dc23134aeb475e5050f8b439827fad65$import$f02ba03fc070e88c$575893c07881cfe8(false); // Ref for transition duration based on / to match swipe speed
    var calculatedDurationRef = $dc23134aeb475e5050f8b439827fad65$import$f02ba03fc070e88c$575893c07881cfe8(); // Use a ref so the open value used is always up to date inside useCallback.
    $dc23134aeb475e5050f8b439827fad65$var$useEnhancedEffect(function() {
        calculatedDurationRef.current = null;
    }, [
        open
    ]);
    var setPosition = $dc23134aeb475e5050f8b439827fad65$import$f02ba03fc070e88c$e04575e0186a275b(function(translate) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
        };
        var _options$mode = options.mode, mode = _options$mode === void 0 ? null : _options$mode, _options$changeTransi = options.changeTransition, changeTransition = _options$changeTransi === void 0 ? true : _options$changeTransi;
        var anchorRtl = $dc23134aeb475e5050f8b439827fad65$import$7b023d7d1ef6fd08$78d2c4ec03c55d6f(theme, anchor);
        var rtlTranslateMultiplier = [
            'right',
            'bottom'
        ].indexOf(anchorRtl) !== -1 ? 1 : -1;
        var horizontalSwipe = $dc23134aeb475e5050f8b439827fad65$import$7b023d7d1ef6fd08$b614985bc7b0336f(anchor);
        var transform = horizontalSwipe ? "translate(".concat(rtlTranslateMultiplier * translate, "px, 0)") : "translate(0, ".concat(rtlTranslateMultiplier * translate, "px)");
        var drawerStyle = paperRef.current.style;
        drawerStyle.webkitTransform = transform;
        drawerStyle.transform = transform;
        var transition = '';
        if (mode) transition = theme.transitions.create('all', $dc23134aeb475e5050f8b439827fad65$import$12a01df6e73ce411$dd26807d75f92780({
            timeout: transitionDuration
        }, {
            mode: mode
        }));
        if (changeTransition) {
            drawerStyle.webkitTransition = transition;
            drawerStyle.transition = transition;
        }
        if (!disableBackdropTransition && !hideBackdrop) {
            var backdropStyle = backdropRef.current.style;
            backdropStyle.opacity = 1 - translate / $dc23134aeb475e5050f8b439827fad65$var$getMaxTranslate(horizontalSwipe, paperRef.current);
            if (changeTransition) {
                backdropStyle.webkitTransition = transition;
                backdropStyle.transition = transition;
            }
        }
    }, [
        anchor,
        disableBackdropTransition,
        hideBackdrop,
        theme,
        transitionDuration
    ]);
    var handleBodyTouchEnd = $dc23134aeb475e5050f8b439827fad65$import$3575fe9de66b2ef3$9099ad97b570f7c(function(event) {
        if (!touchDetected.current) return;
        $dc23134aeb475e5050f8b439827fad65$var$nodeThatClaimedTheSwipe = null;
        touchDetected.current = false;
        setMaybeSwiping(false); // The swipe wasn't started.
        if (!swipeInstance.current.isSwiping) {
            swipeInstance.current.isSwiping = null;
            return;
        }
        swipeInstance.current.isSwiping = null;
        var anchorRtl = $dc23134aeb475e5050f8b439827fad65$import$7b023d7d1ef6fd08$78d2c4ec03c55d6f(theme, anchor);
        var horizontal = $dc23134aeb475e5050f8b439827fad65$import$7b023d7d1ef6fd08$b614985bc7b0336f(anchor);
        var current;
        if (horizontal) current = $dc23134aeb475e5050f8b439827fad65$var$calculateCurrentX(anchorRtl, event.changedTouches);
        else current = $dc23134aeb475e5050f8b439827fad65$var$calculateCurrentY(anchorRtl, event.changedTouches);
        var startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;
        var maxTranslate = $dc23134aeb475e5050f8b439827fad65$var$getMaxTranslate(horizontal, paperRef.current);
        var currentTranslate = $dc23134aeb475e5050f8b439827fad65$var$getTranslate(current, startLocation, open, maxTranslate);
        var translateRatio = currentTranslate / maxTranslate;
        if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) // Calculate transition duration to match swipe speed
        calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;
        if (open) {
            if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) onClose();
            else // Reset the position, the swipe was aborted.
            setPosition(0, {
                mode: 'exit'
            });
            return;
        }
        if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) onOpen();
        else // Reset the position, the swipe was aborted.
        setPosition($dc23134aeb475e5050f8b439827fad65$var$getMaxTranslate(horizontal, paperRef.current), {
            mode: 'enter'
        });
    });
    var handleBodyTouchMove = $dc23134aeb475e5050f8b439827fad65$import$3575fe9de66b2ef3$9099ad97b570f7c(function(event) {
        // the ref may be null when a parent component updates while swiping
        if (!paperRef.current || !touchDetected.current) return;
         // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer
        if ($dc23134aeb475e5050f8b439827fad65$var$nodeThatClaimedTheSwipe != null && $dc23134aeb475e5050f8b439827fad65$var$nodeThatClaimedTheSwipe !== swipeInstance.current) return;
        var anchorRtl = $dc23134aeb475e5050f8b439827fad65$import$7b023d7d1ef6fd08$78d2c4ec03c55d6f(theme, anchor);
        var horizontalSwipe = $dc23134aeb475e5050f8b439827fad65$import$7b023d7d1ef6fd08$b614985bc7b0336f(anchor);
        var currentX = $dc23134aeb475e5050f8b439827fad65$var$calculateCurrentX(anchorRtl, event.touches);
        var currentY = $dc23134aeb475e5050f8b439827fad65$var$calculateCurrentY(anchorRtl, event.touches);
        if (open && paperRef.current.contains(event.target) && $dc23134aeb475e5050f8b439827fad65$var$nodeThatClaimedTheSwipe == null) {
            var domTreeShapes = $dc23134aeb475e5050f8b439827fad65$var$getDomTreeShapes(event.target, paperRef.current);
            var nativeHandler = $dc23134aeb475e5050f8b439827fad65$var$findNativeHandler({
                domTreeShapes: domTreeShapes,
                start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,
                current: horizontalSwipe ? currentX : currentY,
                anchor: anchor
            });
            if (nativeHandler) {
                $dc23134aeb475e5050f8b439827fad65$var$nodeThatClaimedTheSwipe = nativeHandler;
                return;
            }
            $dc23134aeb475e5050f8b439827fad65$var$nodeThatClaimedTheSwipe = swipeInstance.current;
        } // We don't know yet.
        if (swipeInstance.current.isSwiping == null) {
            var dx = Math.abs(currentX - swipeInstance.current.startX);
            var dy = Math.abs(currentY - swipeInstance.current.startY); // We are likely to be swiping, let's prevent the scroll event on iOS.
            if (dx > dy) {
                if (event.cancelable) event.preventDefault();
            }
            var definitelySwiping = horizontalSwipe ? dx > dy && dx > $dc23134aeb475e5050f8b439827fad65$var$UNCERTAINTY_THRESHOLD : dy > dx && dy > $dc23134aeb475e5050f8b439827fad65$var$UNCERTAINTY_THRESHOLD;
            if (definitelySwiping === true || (horizontalSwipe ? dy > $dc23134aeb475e5050f8b439827fad65$var$UNCERTAINTY_THRESHOLD : dx > $dc23134aeb475e5050f8b439827fad65$var$UNCERTAINTY_THRESHOLD)) {
                swipeInstance.current.isSwiping = definitelySwiping;
                if (!definitelySwiping) {
                    handleBodyTouchEnd(event);
                    return;
                } // Shift the starting point.
                swipeInstance.current.startX = currentX;
                swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.
                if (!disableDiscovery && !open) {
                    if (horizontalSwipe) swipeInstance.current.startX -= swipeAreaWidth;
                    else swipeInstance.current.startY -= swipeAreaWidth;
                }
            }
        }
        if (!swipeInstance.current.isSwiping) return;
        var maxTranslate = $dc23134aeb475e5050f8b439827fad65$var$getMaxTranslate(horizontalSwipe, paperRef.current);
        var startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;
        if (open && !swipeInstance.current.paperHit) startLocation = Math.min(startLocation, maxTranslate);
        var translate = $dc23134aeb475e5050f8b439827fad65$var$getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);
        if (open) {
            if (!swipeInstance.current.paperHit) {
                var paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;
                if (paperHit) {
                    swipeInstance.current.paperHit = true;
                    swipeInstance.current.startX = currentX;
                    swipeInstance.current.startY = currentY;
                } else return;
            } else if (translate === 0) {
                swipeInstance.current.startX = currentX;
                swipeInstance.current.startY = currentY;
            }
        }
        if (swipeInstance.current.lastTranslate === null) {
            swipeInstance.current.lastTranslate = translate;
            swipeInstance.current.lastTime = performance.now() + 1;
        }
        var velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1000; // Low Pass filter.
        swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;
        swipeInstance.current.lastTranslate = translate;
        swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.
        if (event.cancelable) event.preventDefault();
        setPosition(translate);
    });
    var handleBodyTouchStart = $dc23134aeb475e5050f8b439827fad65$import$3575fe9de66b2ef3$9099ad97b570f7c(function(event) {
        // We are not supposed to handle this touch move.
        // Example of use case: ignore the event if there is a Slider.
        if (event.defaultPrevented) return;
         // We can only have one node at the time claiming ownership for handling the swipe.
        if (event.muiHandled) return;
         // At least one element clogs the drawer interaction zone.
        if (open && !backdropRef.current.contains(event.target) && !paperRef.current.contains(event.target)) return;
        var anchorRtl = $dc23134aeb475e5050f8b439827fad65$import$7b023d7d1ef6fd08$78d2c4ec03c55d6f(theme, anchor);
        var horizontalSwipe = $dc23134aeb475e5050f8b439827fad65$import$7b023d7d1ef6fd08$b614985bc7b0336f(anchor);
        var currentX = $dc23134aeb475e5050f8b439827fad65$var$calculateCurrentX(anchorRtl, event.touches);
        var currentY = $dc23134aeb475e5050f8b439827fad65$var$calculateCurrentY(anchorRtl, event.touches);
        if (!open) {
            if (disableSwipeToOpen || event.target !== swipeAreaRef.current) return;
            if (horizontalSwipe) {
                if (currentX > swipeAreaWidth) return;
            } else if (currentY > swipeAreaWidth) return;
        }
        event.muiHandled = true;
        $dc23134aeb475e5050f8b439827fad65$var$nodeThatClaimedTheSwipe = null;
        swipeInstance.current.startX = currentX;
        swipeInstance.current.startY = currentY;
        setMaybeSwiping(true);
        if (!open && paperRef.current) // The ref may be null when a parent component updates while swiping.
        setPosition($dc23134aeb475e5050f8b439827fad65$var$getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 20 : -swipeAreaWidth), {
            changeTransition: false
        });
        swipeInstance.current.velocity = 0;
        swipeInstance.current.lastTime = null;
        swipeInstance.current.lastTranslate = null;
        swipeInstance.current.paperHit = false;
        touchDetected.current = true;
    });
    $dc23134aeb475e5050f8b439827fad65$import$f02ba03fc070e88c$7e977b4ca969aabd(function() {
        if (variant === 'temporary') {
            var doc = $dc23134aeb475e5050f8b439827fad65$import$bc270da7a301e7e$9099ad97b570f7c(paperRef.current);
            doc.addEventListener('touchstart', handleBodyTouchStart);
            doc.addEventListener('touchmove', handleBodyTouchMove, {
                passive: false
            });
            doc.addEventListener('touchend', handleBodyTouchEnd);
            return function() {
                doc.removeEventListener('touchstart', handleBodyTouchStart);
                doc.removeEventListener('touchmove', handleBodyTouchMove, {
                    passive: false
                });
                doc.removeEventListener('touchend', handleBodyTouchEnd);
            };
        }
        return undefined;
    }, [
        variant,
        handleBodyTouchStart,
        handleBodyTouchMove,
        handleBodyTouchEnd
    ]);
    $dc23134aeb475e5050f8b439827fad65$import$f02ba03fc070e88c$7e977b4ca969aabd(function() {
        return function() {
            // We need to release the lock.
            if ($dc23134aeb475e5050f8b439827fad65$var$nodeThatClaimedTheSwipe === swipeInstance.current) $dc23134aeb475e5050f8b439827fad65$var$nodeThatClaimedTheSwipe = null;
        };
    }, []);
    $dc23134aeb475e5050f8b439827fad65$import$f02ba03fc070e88c$7e977b4ca969aabd(function() {
        if (!open) setMaybeSwiping(false);
    }, [
        open
    ]);
    var handleBackdropRef = $dc23134aeb475e5050f8b439827fad65$import$f02ba03fc070e88c$e04575e0186a275b(function(instance) {
        // #StrictMode ready
        backdropRef.current = $dc23134aeb475e5050f8b439827fad65$import$9c1aa63963514e3e$1817be7fffc127f2(instance);
    }, []);
    return(/*#__PURE__*/ $dc23134aeb475e5050f8b439827fad65$import$f02ba03fc070e88c$2f8418d37d4320b9($dc23134aeb475e5050f8b439827fad65$import$f02ba03fc070e88c$44f93cb792444969, null, /*#__PURE__*/ $dc23134aeb475e5050f8b439827fad65$import$f02ba03fc070e88c$2f8418d37d4320b9($dc23134aeb475e5050f8b439827fad65$import$7b023d7d1ef6fd08$9099ad97b570f7c, $dc23134aeb475e5050f8b439827fad65$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
        open: variant === 'temporary' && maybeSwiping ? true : open,
        variant: variant,
        ModalProps: $dc23134aeb475e5050f8b439827fad65$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
            BackdropProps: $dc23134aeb475e5050f8b439827fad65$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
            }, BackdropProps, {
                ref: handleBackdropRef
            })
        }, ModalPropsProp),
        PaperProps: $dc23134aeb475e5050f8b439827fad65$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
        }, PaperProps, {
            style: $dc23134aeb475e5050f8b439827fad65$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
                pointerEvents: variant === 'temporary' && !open ? 'none' : ''
            }, PaperProps.style),
            ref: paperRef
        }),
        anchor: anchor,
        transitionDuration: calculatedDurationRef.current || transitionDuration,
        onClose: onClose,
        ref: ref
    }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/ $dc23134aeb475e5050f8b439827fad65$import$f02ba03fc070e88c$2f8418d37d4320b9($dc23134aeb475e5050f8b439827fad65$import$2a7e4a37f2fd794$9099ad97b570f7c, null, /*#__PURE__*/ $dc23134aeb475e5050f8b439827fad65$import$f02ba03fc070e88c$2f8418d37d4320b9($dc23134aeb475e5050f8b439827fad65$import$adac729a722b77d4$9099ad97b570f7c, $dc23134aeb475e5050f8b439827fad65$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
        anchor: anchor,
        ref: swipeAreaRef,
        width: swipeAreaWidth
    }, SwipeAreaProps)))));
});
var $dc23134aeb475e5050f8b439827fad65$export$9099ad97b570f7c = $dc23134aeb475e5050f8b439827fad65$var$SwipeableDrawer;
