import   "0aafe70026b63e122bd0edf3dc9fbcaf:react";
import   "0aafe70026b63e122bd0edf3dc9fbcaf:react-dom";
import   "0aafe70026b63e122bd0edf3dc9fbcaf:prop-types";
import   "0aafe70026b63e122bd0edf3dc9fbcaf:../utils/ownerDocument";
import   "0aafe70026b63e122bd0edf3dc9fbcaf:../utils/useForkRef";
import   "0aafe70026b63e122bd0edf3dc9fbcaf:../utils/useEventCallback";
import   "0aafe70026b63e122bd0edf3dc9fbcaf:@material-ui/utils";
function $0aafe70026b63e122bd0edf3dc9fbcaf$var$mapEventPropToEvent(eventProp) {
    return eventProp.substring(2).toLowerCase();
}
function $0aafe70026b63e122bd0edf3dc9fbcaf$var$clickedRootScrollbar(event) {
    return document.documentElement.clientWidth < event.clientX || document.documentElement.clientHeight < event.clientY;
}
/**
 * Listen for click events that occur somewhere in the document, outside of the element itself.
 * For instance, if you need to hide a menu when people click anywhere else on your page.
 */ function $0aafe70026b63e122bd0edf3dc9fbcaf$var$ClickAwayListener(props) {
    var children = props.children, _props$disableReactTr = props.disableReactTree, disableReactTree = _props$disableReactTr === void 0 ? false : _props$disableReactTr, _props$mouseEvent = props.mouseEvent, mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent, onClickAway = props.onClickAway, _props$touchEvent = props.touchEvent, touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent;
    var movedRef = $0aafe70026b63e122bd0edf3dc9fbcaf$import$f02ba03fc070e88c$575893c07881cfe8(false);
    var nodeRef = $0aafe70026b63e122bd0edf3dc9fbcaf$import$f02ba03fc070e88c$575893c07881cfe8(null);
    var activatedRef = $0aafe70026b63e122bd0edf3dc9fbcaf$import$f02ba03fc070e88c$575893c07881cfe8(false);
    var syntheticEventRef = $0aafe70026b63e122bd0edf3dc9fbcaf$import$f02ba03fc070e88c$575893c07881cfe8(false);
    $0aafe70026b63e122bd0edf3dc9fbcaf$import$f02ba03fc070e88c$7e977b4ca969aabd(function() {
        // Ensure that this component is not "activated" synchronously.
        // https://github.com/facebook/react/issues/20074
        setTimeout(function() {
            activatedRef.current = true;
        }, 0);
        return function() {
            activatedRef.current = false;
        };
    }, []); // can be removed once we drop support for non ref forwarding class components
    var handleOwnRef = $0aafe70026b63e122bd0edf3dc9fbcaf$import$f02ba03fc070e88c$e04575e0186a275b(function(instance) {
        // #StrictMode ready
        nodeRef.current = $0aafe70026b63e122bd0edf3dc9fbcaf$import$9c1aa63963514e3e$1817be7fffc127f2(instance);
    }, []);
    var handleRef = $0aafe70026b63e122bd0edf3dc9fbcaf$import$f0ac2eb29a789ac2$9099ad97b570f7c(children.ref, handleOwnRef); // The handler doesn't take event.defaultPrevented into account:
    //
    // event.preventDefault() is meant to stop default behaviours like
    // clicking a checkbox to check it, hitting a button to submit a form,
    // and hitting left arrow to move the cursor in a text input etc.
    // Only special HTML elements have these default behaviors.
    var handleClickAway = $0aafe70026b63e122bd0edf3dc9fbcaf$import$3575fe9de66b2ef3$9099ad97b570f7c(function(event) {
        // Given developers can stop the propagation of the synthetic event,
        // we can only be confident with a positive value.
        var insideReactTree = syntheticEventRef.current;
        syntheticEventRef.current = false; // 1. IE 11 support, which trigger the handleClickAway even after the unbind
        // 2. The child might render null.
        // 3. Behave like a blur listener.
        if (!activatedRef.current || !nodeRef.current || $0aafe70026b63e122bd0edf3dc9fbcaf$var$clickedRootScrollbar(event)) return;
         // Do not act if user performed touchmove
        if (movedRef.current) {
            movedRef.current = false;
            return;
        }
        var insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js
        if (event.composedPath) insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;
        else {
            // TODO v6 remove dead logic https://caniuse.com/#search=composedPath.
            var doc = $0aafe70026b63e122bd0edf3dc9fbcaf$import$bc270da7a301e7e$9099ad97b570f7c(nodeRef.current);
            insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);
        }
        if (!insideDOM && (disableReactTree || !insideReactTree)) onClickAway(event);
    }); // Keep track of mouse/touch events that bubbled up through the portal.
    var createHandleSynthetic = function createHandleSynthetic1(handlerName) {
        return function(event) {
            syntheticEventRef.current = true;
            var childrenPropsHandler = children.props[handlerName];
            if (childrenPropsHandler) childrenPropsHandler(event);
        };
    };
    var childrenProps = {
        ref: handleRef
    };
    if (touchEvent !== false) childrenProps[touchEvent] = createHandleSynthetic(touchEvent);
    $0aafe70026b63e122bd0edf3dc9fbcaf$import$f02ba03fc070e88c$7e977b4ca969aabd(function() {
        if (touchEvent !== false) {
            var mappedTouchEvent = $0aafe70026b63e122bd0edf3dc9fbcaf$var$mapEventPropToEvent(touchEvent);
            var doc = $0aafe70026b63e122bd0edf3dc9fbcaf$import$bc270da7a301e7e$9099ad97b570f7c(nodeRef.current);
            var handleTouchMove = function handleTouchMove1() {
                movedRef.current = true;
            };
            doc.addEventListener(mappedTouchEvent, handleClickAway);
            doc.addEventListener('touchmove', handleTouchMove);
            return function() {
                doc.removeEventListener(mappedTouchEvent, handleClickAway);
                doc.removeEventListener('touchmove', handleTouchMove);
            };
        }
        return undefined;
    }, [
        handleClickAway,
        touchEvent
    ]);
    if (mouseEvent !== false) childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);
    $0aafe70026b63e122bd0edf3dc9fbcaf$import$f02ba03fc070e88c$7e977b4ca969aabd(function() {
        if (mouseEvent !== false) {
            var mappedMouseEvent = $0aafe70026b63e122bd0edf3dc9fbcaf$var$mapEventPropToEvent(mouseEvent);
            var doc = $0aafe70026b63e122bd0edf3dc9fbcaf$import$bc270da7a301e7e$9099ad97b570f7c(nodeRef.current);
            doc.addEventListener(mappedMouseEvent, handleClickAway);
            return function() {
                doc.removeEventListener(mappedMouseEvent, handleClickAway);
            };
        }
        return undefined;
    }, [
        handleClickAway,
        mouseEvent
    ]);
    return(/*#__PURE__*/ $0aafe70026b63e122bd0edf3dc9fbcaf$import$f02ba03fc070e88c$2f8418d37d4320b9($0aafe70026b63e122bd0edf3dc9fbcaf$import$f02ba03fc070e88c$44f93cb792444969, null, /*#__PURE__*/ $0aafe70026b63e122bd0edf3dc9fbcaf$import$f02ba03fc070e88c$228915fa085e29fe(children, childrenProps)));
}
var $0aafe70026b63e122bd0edf3dc9fbcaf$export$9099ad97b570f7c = $0aafe70026b63e122bd0edf3dc9fbcaf$var$ClickAwayListener;
