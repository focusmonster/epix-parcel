import   "dba26d70f3373fc90050369c374e5e52:@babel/runtime/helpers/esm/extends";
import   "dba26d70f3373fc90050369c374e5e52:@babel/runtime/helpers/esm/objectWithoutProperties";
import   "dba26d70f3373fc90050369c374e5e52:react";
import   "dba26d70f3373fc90050369c374e5e52:prop-types";
import   "dba26d70f3373fc90050369c374e5e52:clsx";
import   "dba26d70f3373fc90050369c374e5e52:@material-ui/utils";
import   "dba26d70f3373fc90050369c374e5e52:../styles/withStyles";
import   "dba26d70f3373fc90050369c374e5e52:../utils/capitalize";
var $dba26d70f3373fc90050369c374e5e52$var$SIZE = 44;
var $dba26d70f3373fc90050369c374e5e52$export$1155669653ed4fad = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            display: 'inline-block'
        },
        /* Styles applied to the root element if `variant="static"`. */ static: {
            transition: theme.transitions.create('transform')
        },
        /* Styles applied to the root element if `variant="indeterminate"`. */ indeterminate: {
            animation: '$circular-rotate 1.4s linear infinite'
        },
        /* Styles applied to the root element if `variant="determinate"`. */ determinate: {
            transition: theme.transitions.create('transform')
        },
        /* Styles applied to the root element if `color="primary"`. */ colorPrimary: {
            color: theme.palette.primary.main
        },
        /* Styles applied to the root element if `color="secondary"`. */ colorSecondary: {
            color: theme.palette.secondary.main
        },
        /* Styles applied to the `svg` element. */ svg: {
            display: 'block'
        },
        /* Styles applied to the `circle` svg path. */ circle: {
            stroke: 'currentColor'
        },
        /* Styles applied to the `circle` svg path if `variant="static"`. */ circleStatic: {
            transition: theme.transitions.create('stroke-dashoffset')
        },
        /* Styles applied to the `circle` svg path if `variant="indeterminate"`. */ circleIndeterminate: {
            animation: '$circular-dash 1.4s ease-in-out infinite',
            // Some default value that looks fine waiting for the animation to kicks in.
            strokeDasharray: '80px, 200px',
            strokeDashoffset: '0px'
        },
        /* Styles applied to the `circle` svg path if `variant="determinate"`. */ circleDeterminate: {
            transition: theme.transitions.create('stroke-dashoffset')
        },
        '@keyframes circular-rotate': {
            '0%': {
                // Fix IE 11 wobbly
                transformOrigin: '50% 50%'
            },
            '100%': {
                transform: 'rotate(360deg)'
            }
        },
        '@keyframes circular-dash': {
            '0%': {
                strokeDasharray: '1px, 200px',
                strokeDashoffset: '0px'
            },
            '50%': {
                strokeDasharray: '100px, 200px',
                strokeDashoffset: '-15px'
            },
            '100%': {
                strokeDasharray: '100px, 200px',
                strokeDashoffset: '-125px'
            }
        },
        /* Styles applied to the `circle` svg path if `disableShrink={true}`. */ circleDisableShrink: {
            animation: 'none'
        }
    };
};
/**
 * ## ARIA
 *
 * If the progress bar is describing the loading progress of a particular region of a page,
 * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`
 * attribute to `true` on that region until it has finished loading.
 */ var $dba26d70f3373fc90050369c374e5e52$var$CircularProgress = /*#__PURE__*/ $dba26d70f3373fc90050369c374e5e52$import$f02ba03fc070e88c$ac92bb288368c37c(function CircularProgress(props, ref) {
    var classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'primary' : _props$color, _props$disableShrink = props.disableShrink, disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink, _props$size = props.size, size = _props$size === void 0 ? 40 : _props$size, style = props.style, _props$thickness = props.thickness, thickness = _props$thickness === void 0 ? 3.6 : _props$thickness, _props$value = props.value, value = _props$value === void 0 ? 0 : _props$value, _props$variant = props.variant, variant = _props$variant === void 0 ? 'indeterminate' : _props$variant, other = $dba26d70f3373fc90050369c374e5e52$import$e114c77af6cc4d77$9099ad97b570f7c(props, [
        "classes",
        "className",
        "color",
        "disableShrink",
        "size",
        "style",
        "thickness",
        "value",
        "variant"
    ]);
    var circleStyle = {
    };
    var rootStyle = {
    };
    var rootProps = {
    };
    if (variant === 'determinate' || variant === 'static') {
        var circumference = 2 * Math.PI * (($dba26d70f3373fc90050369c374e5e52$var$SIZE - thickness) / 2);
        circleStyle.strokeDasharray = circumference.toFixed(3);
        rootProps['aria-valuenow'] = Math.round(value);
        circleStyle.strokeDashoffset = "".concat(((100 - value) / 100 * circumference).toFixed(3), "px");
        rootStyle.transform = 'rotate(-90deg)';
    }
    return(/*#__PURE__*/ $dba26d70f3373fc90050369c374e5e52$import$f02ba03fc070e88c$2f8418d37d4320b9("div", $dba26d70f3373fc90050369c374e5e52$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
        className: $dba26d70f3373fc90050369c374e5e52$import$3e54c96927a352a4$9099ad97b570f7c(classes.root, className, color !== 'inherit' && classes["color".concat($dba26d70f3373fc90050369c374e5e52$import$f35500a7ba1578c4$9099ad97b570f7c(color))], {
            'determinate': classes.determinate,
            'indeterminate': classes.indeterminate,
            'static': classes.static
        }[variant]),
        style: $dba26d70f3373fc90050369c374e5e52$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
            width: size,
            height: size
        }, rootStyle, style),
        ref: ref,
        role: "progressbar"
    }, rootProps, other), /*#__PURE__*/ $dba26d70f3373fc90050369c374e5e52$import$f02ba03fc070e88c$2f8418d37d4320b9("svg", {
        className: classes.svg,
        viewBox: "".concat($dba26d70f3373fc90050369c374e5e52$var$SIZE / 2, " ").concat($dba26d70f3373fc90050369c374e5e52$var$SIZE / 2, " ").concat($dba26d70f3373fc90050369c374e5e52$var$SIZE, " ").concat($dba26d70f3373fc90050369c374e5e52$var$SIZE)
    }, /*#__PURE__*/ $dba26d70f3373fc90050369c374e5e52$import$f02ba03fc070e88c$2f8418d37d4320b9("circle", {
        className: $dba26d70f3373fc90050369c374e5e52$import$3e54c96927a352a4$9099ad97b570f7c(classes.circle, disableShrink && classes.circleDisableShrink, {
            'determinate': classes.circleDeterminate,
            'indeterminate': classes.circleIndeterminate,
            'static': classes.circleStatic
        }[variant]),
        style: circleStyle,
        cx: $dba26d70f3373fc90050369c374e5e52$var$SIZE,
        cy: $dba26d70f3373fc90050369c374e5e52$var$SIZE,
        r: ($dba26d70f3373fc90050369c374e5e52$var$SIZE - thickness) / 2,
        fill: "none",
        strokeWidth: thickness
    }))));
});
var $dba26d70f3373fc90050369c374e5e52$export$9099ad97b570f7c = $dba26d70f3373fc90050369c374e5e52$import$abdf0c7fda13cc01$9099ad97b570f7c($dba26d70f3373fc90050369c374e5e52$export$1155669653ed4fad, {
    name: 'MuiCircularProgress',
    flip: false
})($dba26d70f3373fc90050369c374e5e52$var$CircularProgress);
