import   "22174f3b49a1be2fdb2f9c9788689312:@babel/runtime/helpers/esm/extends";
import   "22174f3b49a1be2fdb2f9c9788689312:@babel/runtime/helpers/esm/objectWithoutProperties";
import   "22174f3b49a1be2fdb2f9c9788689312:react";
import   "22174f3b49a1be2fdb2f9c9788689312:prop-types";
import   "22174f3b49a1be2fdb2f9c9788689312:./NativeSelectInput";
import   "22174f3b49a1be2fdb2f9c9788689312:../styles/withStyles";
import   "22174f3b49a1be2fdb2f9c9788689312:../FormControl/formControlState";
import   "22174f3b49a1be2fdb2f9c9788689312:../FormControl/useFormControl";
import   "22174f3b49a1be2fdb2f9c9788689312:../internal/svg-icons/ArrowDropDown";
import   "22174f3b49a1be2fdb2f9c9788689312:../Input";
var $22174f3b49a1be2fdb2f9c9788689312$export$1155669653ed4fad = function styles(theme) {
    return {
        /* Styles applied to the select component `root` class. */ root: {
        },
        /* Styles applied to the select component `select` class. */ select: {
            '-moz-appearance': 'none',
            // Reset
            '-webkit-appearance': 'none',
            // Reset
            // When interacting quickly, the text can end up selected.
            // Native select can't be selected either.
            userSelect: 'none',
            borderRadius: 0,
            // Reset
            minWidth: 16,
            // So it doesn't collapse.
            cursor: 'pointer',
            '&:focus': {
                // Show that it's not an text input
                backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.05)' : 'rgba(255, 255, 255, 0.05)',
                borderRadius: 0
            },
            // Remove IE 11 arrow
            '&::-ms-expand': {
                display: 'none'
            },
            '&$disabled': {
                cursor: 'default'
            },
            '&[multiple]': {
                height: 'auto'
            },
            '&:not([multiple]) option, &:not([multiple]) optgroup': {
                backgroundColor: theme.palette.background.paper
            },
            '&&': {
                paddingRight: 24
            }
        },
        /* Styles applied to the select component if `variant="filled"`. */ filled: {
            '&&': {
                paddingRight: 32
            }
        },
        /* Styles applied to the select component if `variant="outlined"`. */ outlined: {
            borderRadius: theme.shape.borderRadius,
            '&&': {
                paddingRight: 32
            }
        },
        /* Styles applied to the select component `selectMenu` class. */ selectMenu: {
            height: 'auto',
            // Resets for multpile select with chips
            minHeight: '1.1876em',
            // Required for select\text-field height consistency
            textOverflow: 'ellipsis',
            whiteSpace: 'nowrap',
            overflow: 'hidden'
        },
        /* Pseudo-class applied to the select component `disabled` class. */ disabled: {
        },
        /* Styles applied to the icon component. */ icon: {
            // We use a position absolute over a flexbox in order to forward the pointer events
            // to the input and to support wrapping tags..
            position: 'absolute',
            right: 0,
            top: 'calc(50% - 12px)',
            // Center vertically
            pointerEvents: 'none',
            // Don't block pointer events on the select under the icon.
            color: theme.palette.action.active,
            '&$disabled': {
                color: theme.palette.action.disabled
            }
        },
        /* Styles applied to the icon component if the popup is open. */ iconOpen: {
            transform: 'rotate(180deg)'
        },
        /* Styles applied to the icon component if `variant="filled"`. */ iconFilled: {
            right: 7
        },
        /* Styles applied to the icon component if `variant="outlined"`. */ iconOutlined: {
            right: 7
        },
        /* Styles applied to the underlying native input component. */ nativeInput: {
            bottom: 0,
            left: 0,
            position: 'absolute',
            opacity: 0,
            pointerEvents: 'none',
            width: '100%'
        }
    };
};
var $22174f3b49a1be2fdb2f9c9788689312$var$defaultInput = /*#__PURE__*/ $22174f3b49a1be2fdb2f9c9788689312$import$f02ba03fc070e88c$2f8418d37d4320b9($22174f3b49a1be2fdb2f9c9788689312$import$ba00c9527c5138a0$9099ad97b570f7c, null);
/**
 * An alternative to `<Select native />` with a much smaller bundle size footprint.
 */ var $22174f3b49a1be2fdb2f9c9788689312$var$NativeSelect = /*#__PURE__*/ $22174f3b49a1be2fdb2f9c9788689312$import$f02ba03fc070e88c$ac92bb288368c37c(function NativeSelect(props, ref) {
    var children = props.children, classes = props.classes, _props$IconComponent = props.IconComponent, IconComponent = _props$IconComponent === void 0 ? $22174f3b49a1be2fdb2f9c9788689312$import$583c1da36813325b$9099ad97b570f7c : _props$IconComponent, _props$input = props.input, input = _props$input === void 0 ? $22174f3b49a1be2fdb2f9c9788689312$var$defaultInput : _props$input, inputProps = props.inputProps, variant = props.variant, other = $22174f3b49a1be2fdb2f9c9788689312$import$e114c77af6cc4d77$9099ad97b570f7c(props, [
        "children",
        "classes",
        "IconComponent",
        "input",
        "inputProps",
        "variant"
    ]);
    var muiFormControl = $22174f3b49a1be2fdb2f9c9788689312$import$d4261346a34c5381$9099ad97b570f7c();
    var fcs = $22174f3b49a1be2fdb2f9c9788689312$import$9070252bcfb59814$9099ad97b570f7c({
        props: props,
        muiFormControl: muiFormControl,
        states: [
            'variant'
        ]
    });
    return(/*#__PURE__*/ $22174f3b49a1be2fdb2f9c9788689312$import$f02ba03fc070e88c$228915fa085e29fe(input, $22174f3b49a1be2fdb2f9c9788689312$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
        // Most of the logic is implemented in `NativeSelectInput`.
        // The `Select` component is a simple API wrapper to expose something better to play with.
        inputComponent: $22174f3b49a1be2fdb2f9c9788689312$import$c07f33945a40b441$9099ad97b570f7c,
        inputProps: $22174f3b49a1be2fdb2f9c9788689312$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
            children: children,
            classes: classes,
            IconComponent: IconComponent,
            variant: fcs.variant,
            type: undefined
        }, inputProps, input ? input.props.inputProps : {
        }),
        ref: ref
    }, other)));
});
$22174f3b49a1be2fdb2f9c9788689312$var$NativeSelect.muiName = 'Select';
var $22174f3b49a1be2fdb2f9c9788689312$export$9099ad97b570f7c = $22174f3b49a1be2fdb2f9c9788689312$import$abdf0c7fda13cc01$9099ad97b570f7c($22174f3b49a1be2fdb2f9c9788689312$export$1155669653ed4fad, {
    name: 'MuiNativeSelect'
})($22174f3b49a1be2fdb2f9c9788689312$var$NativeSelect);
