import   "cb274839b8dabdd329bd10d859ea1276:@babel/runtime/helpers/esm/extends";
import   "cb274839b8dabdd329bd10d859ea1276:@babel/runtime/helpers/esm/objectWithoutProperties";
import   "cb274839b8dabdd329bd10d859ea1276:react";
import   "cb274839b8dabdd329bd10d859ea1276:prop-types";
import   "cb274839b8dabdd329bd10d859ea1276:clsx";
import   "cb274839b8dabdd329bd10d859ea1276:../internal/svg-icons/Cancel";
import   "cb274839b8dabdd329bd10d859ea1276:../styles/withStyles";
import   "cb274839b8dabdd329bd10d859ea1276:../styles/colorManipulator";
import   "cb274839b8dabdd329bd10d859ea1276:../utils/useForkRef";
import   "cb274839b8dabdd329bd10d859ea1276:../utils/unsupportedProp";
import   "cb274839b8dabdd329bd10d859ea1276:../utils/capitalize";
import   "cb274839b8dabdd329bd10d859ea1276:../ButtonBase";
var $cb274839b8dabdd329bd10d859ea1276$export$1155669653ed4fad = function styles(theme) {
    var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];
    var deleteIconColor = $cb274839b8dabdd329bd10d859ea1276$import$78cd920a0798486b$9ea11009bc462ef5(theme.palette.text.primary, 0.26);
    return {
        /* Styles applied to the root element. */ root: {
            fontFamily: theme.typography.fontFamily,
            fontSize: theme.typography.pxToRem(13),
            display: 'inline-flex',
            alignItems: 'center',
            justifyContent: 'center',
            height: 32,
            color: theme.palette.getContrastText(backgroundColor),
            backgroundColor: backgroundColor,
            borderRadius: 16,
            whiteSpace: 'nowrap',
            transition: theme.transitions.create([
                'background-color',
                'box-shadow'
            ]),
            // label will inherit this from root, then `clickable` class overrides this for both
            cursor: 'default',
            // We disable the focus ring for mouse, touch and keyboard users.
            outline: 0,
            textDecoration: 'none',
            border: 'none',
            // Remove `button` border
            padding: 0,
            // Remove `button` padding
            verticalAlign: 'middle',
            boxSizing: 'border-box',
            '&$disabled': {
                opacity: 0.5,
                pointerEvents: 'none'
            },
            '& $avatar': {
                marginLeft: 5,
                marginRight: -6,
                width: 24,
                height: 24,
                color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],
                fontSize: theme.typography.pxToRem(12)
            },
            '& $avatarColorPrimary': {
                color: theme.palette.primary.contrastText,
                backgroundColor: theme.palette.primary.dark
            },
            '& $avatarColorSecondary': {
                color: theme.palette.secondary.contrastText,
                backgroundColor: theme.palette.secondary.dark
            },
            '& $avatarSmall': {
                marginLeft: 4,
                marginRight: -4,
                width: 18,
                height: 18,
                fontSize: theme.typography.pxToRem(10)
            }
        },
        /* Styles applied to the root element if `size="small"`. */ sizeSmall: {
            height: 24
        },
        /* Styles applied to the root element if `color="primary"`. */ colorPrimary: {
            backgroundColor: theme.palette.primary.main,
            color: theme.palette.primary.contrastText
        },
        /* Styles applied to the root element if `color="secondary"`. */ colorSecondary: {
            backgroundColor: theme.palette.secondary.main,
            color: theme.palette.secondary.contrastText
        },
        /* Pseudo-class applied to the root element if `disabled={true}`. */ disabled: {
        },
        /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */ clickable: {
            userSelect: 'none',
            WebkitTapHighlightColor: 'transparent',
            cursor: 'pointer',
            '&:hover, &:focus': {
                backgroundColor: $cb274839b8dabdd329bd10d859ea1276$import$78cd920a0798486b$2ae0ba470ef41fbc(backgroundColor, 0.08)
            },
            '&:active': {
                boxShadow: theme.shadows[1]
            }
        },
        /* Styles applied to the root element if `onClick` and `color="primary"` is defined or `clickable={true}`. */ clickableColorPrimary: {
            '&:hover, &:focus': {
                backgroundColor: $cb274839b8dabdd329bd10d859ea1276$import$78cd920a0798486b$2ae0ba470ef41fbc(theme.palette.primary.main, 0.08)
            }
        },
        /* Styles applied to the root element if `onClick` and `color="secondary"` is defined or `clickable={true}`. */ clickableColorSecondary: {
            '&:hover, &:focus': {
                backgroundColor: $cb274839b8dabdd329bd10d859ea1276$import$78cd920a0798486b$2ae0ba470ef41fbc(theme.palette.secondary.main, 0.08)
            }
        },
        /* Styles applied to the root element if `onDelete` is defined. */ deletable: {
            '&:focus': {
                backgroundColor: $cb274839b8dabdd329bd10d859ea1276$import$78cd920a0798486b$2ae0ba470ef41fbc(backgroundColor, 0.08)
            }
        },
        /* Styles applied to the root element if `onDelete` and `color="primary"` is defined. */ deletableColorPrimary: {
            '&:focus': {
                backgroundColor: $cb274839b8dabdd329bd10d859ea1276$import$78cd920a0798486b$2ae0ba470ef41fbc(theme.palette.primary.main, 0.2)
            }
        },
        /* Styles applied to the root element if `onDelete` and `color="secondary"` is defined. */ deletableColorSecondary: {
            '&:focus': {
                backgroundColor: $cb274839b8dabdd329bd10d859ea1276$import$78cd920a0798486b$2ae0ba470ef41fbc(theme.palette.secondary.main, 0.2)
            }
        },
        /* Styles applied to the root element if `variant="outlined"`. */ outlined: {
            backgroundColor: 'transparent',
            border: "1px solid ".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),
            '$clickable&:hover, $clickable&:focus, $deletable&:focus': {
                backgroundColor: $cb274839b8dabdd329bd10d859ea1276$import$78cd920a0798486b$9ea11009bc462ef5(theme.palette.text.primary, theme.palette.action.hoverOpacity)
            },
            '& $avatar': {
                marginLeft: 4
            },
            '& $avatarSmall': {
                marginLeft: 2
            },
            '& $icon': {
                marginLeft: 4
            },
            '& $iconSmall': {
                marginLeft: 2
            },
            '& $deleteIcon': {
                marginRight: 5
            },
            '& $deleteIconSmall': {
                marginRight: 3
            }
        },
        /* Styles applied to the root element if `variant="outlined"` and `color="primary"`. */ outlinedPrimary: {
            color: theme.palette.primary.main,
            border: "1px solid ".concat(theme.palette.primary.main),
            '$clickable&:hover, $clickable&:focus, $deletable&:focus': {
                backgroundColor: $cb274839b8dabdd329bd10d859ea1276$import$78cd920a0798486b$9ea11009bc462ef5(theme.palette.primary.main, theme.palette.action.hoverOpacity)
            }
        },
        /* Styles applied to the root element if `variant="outlined"` and `color="secondary"`. */ outlinedSecondary: {
            color: theme.palette.secondary.main,
            border: "1px solid ".concat(theme.palette.secondary.main),
            '$clickable&:hover, $clickable&:focus, $deletable&:focus': {
                backgroundColor: $cb274839b8dabdd329bd10d859ea1276$import$78cd920a0798486b$9ea11009bc462ef5(theme.palette.secondary.main, theme.palette.action.hoverOpacity)
            }
        },
        // TODO v5: remove
        /* Styles applied to the `avatar` element. */ avatar: {
        },
        /* Styles applied to the `avatar` element if `size="small"`. */ avatarSmall: {
        },
        /* Styles applied to the `avatar` element if `color="primary"`. */ avatarColorPrimary: {
        },
        /* Styles applied to the `avatar` element if `color="secondary"`. */ avatarColorSecondary: {
        },
        /* Styles applied to the `icon` element. */ icon: {
            color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],
            marginLeft: 5,
            marginRight: -6
        },
        /* Styles applied to the `icon` element if `size="small"`. */ iconSmall: {
            width: 18,
            height: 18,
            marginLeft: 4,
            marginRight: -4
        },
        /* Styles applied to the `icon` element if `color="primary"`. */ iconColorPrimary: {
            color: 'inherit'
        },
        /* Styles applied to the `icon` element if `color="secondary"`. */ iconColorSecondary: {
            color: 'inherit'
        },
        /* Styles applied to the label `span` element. */ label: {
            overflow: 'hidden',
            textOverflow: 'ellipsis',
            paddingLeft: 12,
            paddingRight: 12,
            whiteSpace: 'nowrap'
        },
        /* Styles applied to the label `span` element if `size="small"`. */ labelSmall: {
            paddingLeft: 8,
            paddingRight: 8
        },
        /* Styles applied to the `deleteIcon` element. */ deleteIcon: {
            WebkitTapHighlightColor: 'transparent',
            color: deleteIconColor,
            height: 22,
            width: 22,
            cursor: 'pointer',
            margin: '0 5px 0 -6px',
            '&:hover': {
                color: $cb274839b8dabdd329bd10d859ea1276$import$78cd920a0798486b$9ea11009bc462ef5(deleteIconColor, 0.4)
            }
        },
        /* Styles applied to the `deleteIcon` element if `size="small"`. */ deleteIconSmall: {
            height: 16,
            width: 16,
            marginRight: 4,
            marginLeft: -4
        },
        /* Styles applied to the deleteIcon element if `color="primary"` and `variant="default"`. */ deleteIconColorPrimary: {
            color: $cb274839b8dabdd329bd10d859ea1276$import$78cd920a0798486b$9ea11009bc462ef5(theme.palette.primary.contrastText, 0.7),
            '&:hover, &:active': {
                color: theme.palette.primary.contrastText
            }
        },
        /* Styles applied to the deleteIcon element if `color="secondary"` and `variant="default"`. */ deleteIconColorSecondary: {
            color: $cb274839b8dabdd329bd10d859ea1276$import$78cd920a0798486b$9ea11009bc462ef5(theme.palette.secondary.contrastText, 0.7),
            '&:hover, &:active': {
                color: theme.palette.secondary.contrastText
            }
        },
        /* Styles applied to the deleteIcon element if `color="primary"` and `variant="outlined"`. */ deleteIconOutlinedColorPrimary: {
            color: $cb274839b8dabdd329bd10d859ea1276$import$78cd920a0798486b$9ea11009bc462ef5(theme.palette.primary.main, 0.7),
            '&:hover, &:active': {
                color: theme.palette.primary.main
            }
        },
        /* Styles applied to the deleteIcon element if `color="secondary"` and `variant="outlined"`. */ deleteIconOutlinedColorSecondary: {
            color: $cb274839b8dabdd329bd10d859ea1276$import$78cd920a0798486b$9ea11009bc462ef5(theme.palette.secondary.main, 0.7),
            '&:hover, &:active': {
                color: theme.palette.secondary.main
            }
        }
    };
};
function $cb274839b8dabdd329bd10d859ea1276$var$isDeleteKeyboardEvent(keyboardEvent) {
    return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';
}
/**
 * Chips represent complex entities in small blocks, such as a contact.
 */ var $cb274839b8dabdd329bd10d859ea1276$var$Chip = /*#__PURE__*/ $cb274839b8dabdd329bd10d859ea1276$import$f02ba03fc070e88c$ac92bb288368c37c(function Chip(props, ref) {
    var avatarProp = props.avatar, classes = props.classes, className = props.className, clickableProp = props.clickable, _props$color = props.color, color = _props$color === void 0 ? 'default' : _props$color, ComponentProp = props.component, deleteIconProp = props.deleteIcon, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, iconProp = props.icon, label = props.label, onClick = props.onClick, onDelete = props.onDelete, onKeyDown = props.onKeyDown, onKeyUp = props.onKeyUp, _props$size = props.size, size = _props$size === void 0 ? 'medium' : _props$size, _props$variant = props.variant, variant = _props$variant === void 0 ? 'default' : _props$variant, other = $cb274839b8dabdd329bd10d859ea1276$import$e114c77af6cc4d77$9099ad97b570f7c(props, [
        "avatar",
        "classes",
        "className",
        "clickable",
        "color",
        "component",
        "deleteIcon",
        "disabled",
        "icon",
        "label",
        "onClick",
        "onDelete",
        "onKeyDown",
        "onKeyUp",
        "size",
        "variant"
    ]);
    var chipRef = $cb274839b8dabdd329bd10d859ea1276$import$f02ba03fc070e88c$575893c07881cfe8(null);
    var handleRef = $cb274839b8dabdd329bd10d859ea1276$import$f0ac2eb29a789ac2$9099ad97b570f7c(chipRef, ref);
    var handleDeleteIconClick = function handleDeleteIconClick1(event) {
        // Stop the event from bubbling up to the `Chip`
        event.stopPropagation();
        if (onDelete) onDelete(event);
    };
    var handleKeyDown = function handleKeyDown1(event) {
        // Ignore events from children of `Chip`.
        if (event.currentTarget === event.target && $cb274839b8dabdd329bd10d859ea1276$var$isDeleteKeyboardEvent(event)) // will be handled in keyUp, otherwise some browsers
        // might init navigation
        event.preventDefault();
        if (onKeyDown) onKeyDown(event);
    };
    var handleKeyUp = function handleKeyUp1(event) {
        // Ignore events from children of `Chip`.
        if (event.currentTarget === event.target) {
            if (onDelete && $cb274839b8dabdd329bd10d859ea1276$var$isDeleteKeyboardEvent(event)) onDelete(event);
            else if (event.key === 'Escape' && chipRef.current) chipRef.current.blur();
        }
        if (onKeyUp) onKeyUp(event);
    };
    var clickable = clickableProp !== false && onClick ? true : clickableProp;
    var small = size === 'small';
    var Component = ComponentProp || (clickable ? $cb274839b8dabdd329bd10d859ea1276$import$b113eefa2a2d89da$9099ad97b570f7c : 'div');
    var moreProps = Component === $cb274839b8dabdd329bd10d859ea1276$import$b113eefa2a2d89da$9099ad97b570f7c ? {
        component: 'div'
    } : {
    };
    var deleteIcon = null;
    if (onDelete) {
        var customClasses = $cb274839b8dabdd329bd10d859ea1276$import$3e54c96927a352a4$9099ad97b570f7c(color !== 'default' && (variant === "default" ? classes["deleteIconColor".concat($cb274839b8dabdd329bd10d859ea1276$import$f35500a7ba1578c4$9099ad97b570f7c(color))] : classes["deleteIconOutlinedColor".concat($cb274839b8dabdd329bd10d859ea1276$import$f35500a7ba1578c4$9099ad97b570f7c(color))]), small && classes.deleteIconSmall);
        deleteIcon = deleteIconProp && /*#__PURE__*/ $cb274839b8dabdd329bd10d859ea1276$import$f02ba03fc070e88c$64e9a1defe72209(deleteIconProp) ? /*#__PURE__*/ $cb274839b8dabdd329bd10d859ea1276$import$f02ba03fc070e88c$228915fa085e29fe(deleteIconProp, {
            className: $cb274839b8dabdd329bd10d859ea1276$import$3e54c96927a352a4$9099ad97b570f7c(deleteIconProp.props.className, classes.deleteIcon, customClasses),
            onClick: handleDeleteIconClick
        }) : /*#__PURE__*/ $cb274839b8dabdd329bd10d859ea1276$import$f02ba03fc070e88c$2f8418d37d4320b9($cb274839b8dabdd329bd10d859ea1276$import$f1e4ddfa50ba020d$9099ad97b570f7c, {
            className: $cb274839b8dabdd329bd10d859ea1276$import$3e54c96927a352a4$9099ad97b570f7c(classes.deleteIcon, customClasses),
            onClick: handleDeleteIconClick
        });
    }
    var avatar = null;
    if (avatarProp && /*#__PURE__*/ $cb274839b8dabdd329bd10d859ea1276$import$f02ba03fc070e88c$64e9a1defe72209(avatarProp)) avatar = /*#__PURE__*/ $cb274839b8dabdd329bd10d859ea1276$import$f02ba03fc070e88c$228915fa085e29fe(avatarProp, {
        className: $cb274839b8dabdd329bd10d859ea1276$import$3e54c96927a352a4$9099ad97b570f7c(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes["avatarColor".concat($cb274839b8dabdd329bd10d859ea1276$import$f35500a7ba1578c4$9099ad97b570f7c(color))])
    });
    var icon = null;
    if (iconProp && /*#__PURE__*/ $cb274839b8dabdd329bd10d859ea1276$import$f02ba03fc070e88c$64e9a1defe72209(iconProp)) icon = /*#__PURE__*/ $cb274839b8dabdd329bd10d859ea1276$import$f02ba03fc070e88c$228915fa085e29fe(iconProp, {
        className: $cb274839b8dabdd329bd10d859ea1276$import$3e54c96927a352a4$9099ad97b570f7c(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes["iconColor".concat($cb274839b8dabdd329bd10d859ea1276$import$f35500a7ba1578c4$9099ad97b570f7c(color))])
    });
    return(/*#__PURE__*/ $cb274839b8dabdd329bd10d859ea1276$import$f02ba03fc070e88c$2f8418d37d4320b9(Component, $cb274839b8dabdd329bd10d859ea1276$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
        role: clickable || onDelete ? 'button' : undefined,
        className: $cb274839b8dabdd329bd10d859ea1276$import$3e54c96927a352a4$9099ad97b570f7c(classes.root, className, color !== 'default' && [
            classes["color".concat($cb274839b8dabdd329bd10d859ea1276$import$f35500a7ba1578c4$9099ad97b570f7c(color))],
            clickable && classes["clickableColor".concat($cb274839b8dabdd329bd10d859ea1276$import$f35500a7ba1578c4$9099ad97b570f7c(color))],
            onDelete && classes["deletableColor".concat($cb274839b8dabdd329bd10d859ea1276$import$f35500a7ba1578c4$9099ad97b570f7c(color))]
        ], variant !== "default" && [
            classes.outlined,
            {
                'primary': classes.outlinedPrimary,
                'secondary': classes.outlinedSecondary
            }[color]
        ], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),
        "aria-disabled": disabled ? true : undefined,
        tabIndex: clickable || onDelete ? 0 : undefined,
        onClick: onClick,
        onKeyDown: handleKeyDown,
        onKeyUp: handleKeyUp,
        ref: handleRef
    }, moreProps, other), avatar || icon, /*#__PURE__*/ $cb274839b8dabdd329bd10d859ea1276$import$f02ba03fc070e88c$2f8418d37d4320b9("span", {
        className: $cb274839b8dabdd329bd10d859ea1276$import$3e54c96927a352a4$9099ad97b570f7c(classes.label, small && classes.labelSmall)
    }, label), deleteIcon));
});
var $cb274839b8dabdd329bd10d859ea1276$export$9099ad97b570f7c = $cb274839b8dabdd329bd10d859ea1276$import$abdf0c7fda13cc01$9099ad97b570f7c($cb274839b8dabdd329bd10d859ea1276$export$1155669653ed4fad, {
    name: 'MuiChip'
})($cb274839b8dabdd329bd10d859ea1276$var$Chip);
