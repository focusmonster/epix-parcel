import   "807566ffb805d91152de5ce902ec2980:@babel/runtime/helpers/esm/extends";
import   "807566ffb805d91152de5ce902ec2980:@babel/runtime/helpers/esm/toConsumableArray";
import   "807566ffb805d91152de5ce902ec2980:@babel/runtime/helpers/esm/objectWithoutProperties";
import   "807566ffb805d91152de5ce902ec2980:react";
import   "807566ffb805d91152de5ce902ec2980:prop-types";
import   "807566ffb805d91152de5ce902ec2980:react-transition-group";
import   "807566ffb805d91152de5ce902ec2980:clsx";
import   "807566ffb805d91152de5ce902ec2980:../styles/withStyles";
import   "807566ffb805d91152de5ce902ec2980:./Ripple";
var $807566ffb805d91152de5ce902ec2980$var$DURATION = 550;
var $807566ffb805d91152de5ce902ec2980$export$a4abb88db07c21de = 80;
var $807566ffb805d91152de5ce902ec2980$export$1155669653ed4fad = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            overflow: 'hidden',
            pointerEvents: 'none',
            position: 'absolute',
            zIndex: 0,
            top: 0,
            right: 0,
            bottom: 0,
            left: 0,
            borderRadius: 'inherit'
        },
        /* Styles applied to the internal `Ripple` components `ripple` class. */ ripple: {
            opacity: 0,
            position: 'absolute'
        },
        /* Styles applied to the internal `Ripple` components `rippleVisible` class. */ rippleVisible: {
            opacity: 0.3,
            transform: 'scale(1)',
            animation: "$enter ".concat($807566ffb805d91152de5ce902ec2980$var$DURATION, "ms ").concat(theme.transitions.easing.easeInOut)
        },
        /* Styles applied to the internal `Ripple` components `ripplePulsate` class. */ ripplePulsate: {
            animationDuration: "".concat(theme.transitions.duration.shorter, "ms")
        },
        /* Styles applied to the internal `Ripple` components `child` class. */ child: {
            opacity: 1,
            display: 'block',
            width: '100%',
            height: '100%',
            borderRadius: '50%',
            backgroundColor: 'currentColor'
        },
        /* Styles applied to the internal `Ripple` components `childLeaving` class. */ childLeaving: {
            opacity: 0,
            animation: "$exit ".concat($807566ffb805d91152de5ce902ec2980$var$DURATION, "ms ").concat(theme.transitions.easing.easeInOut)
        },
        /* Styles applied to the internal `Ripple` components `childPulsate` class. */ childPulsate: {
            position: 'absolute',
            left: 0,
            top: 0,
            animation: "$pulsate 2500ms ".concat(theme.transitions.easing.easeInOut, " 200ms infinite")
        },
        '@keyframes enter': {
            '0%': {
                transform: 'scale(0)',
                opacity: 0.1
            },
            '100%': {
                transform: 'scale(1)',
                opacity: 0.3
            }
        },
        '@keyframes exit': {
            '0%': {
                opacity: 1
            },
            '100%': {
                opacity: 0
            }
        },
        '@keyframes pulsate': {
            '0%': {
                transform: 'scale(1)'
            },
            '50%': {
                transform: 'scale(0.92)'
            },
            '100%': {
                transform: 'scale(1)'
            }
        }
    };
};
/**
 * @ignore - internal component.
 *
 * TODO v5: Make private
 */ var $807566ffb805d91152de5ce902ec2980$var$TouchRipple = /*#__PURE__*/ $807566ffb805d91152de5ce902ec2980$import$f02ba03fc070e88c$ac92bb288368c37c(function TouchRipple(props, ref) {
    var _props$center = props.center, centerProp = _props$center === void 0 ? false : _props$center, classes = props.classes, className = props.className, other = $807566ffb805d91152de5ce902ec2980$import$e114c77af6cc4d77$9099ad97b570f7c(props, [
        "center",
        "classes",
        "className"
    ]);
    var _React$useState = $807566ffb805d91152de5ce902ec2980$import$f02ba03fc070e88c$f54936751fc2c51([]), ripples = _React$useState[0], setRipples = _React$useState[1];
    var nextKey = $807566ffb805d91152de5ce902ec2980$import$f02ba03fc070e88c$575893c07881cfe8(0);
    var rippleCallback = $807566ffb805d91152de5ce902ec2980$import$f02ba03fc070e88c$575893c07881cfe8(null);
    $807566ffb805d91152de5ce902ec2980$import$f02ba03fc070e88c$7e977b4ca969aabd(function() {
        if (rippleCallback.current) {
            rippleCallback.current();
            rippleCallback.current = null;
        }
    }, [
        ripples
    ]); // Used to filter out mouse emulated events on mobile.
    var ignoringMouseDown = $807566ffb805d91152de5ce902ec2980$import$f02ba03fc070e88c$575893c07881cfe8(false); // We use a timer in order to only show the ripples for touch "click" like events.
    // We don't want to display the ripple for touch scroll events.
    var startTimer = $807566ffb805d91152de5ce902ec2980$import$f02ba03fc070e88c$575893c07881cfe8(null); // This is the hook called once the previous timeout is ready.
    var startTimerCommit = $807566ffb805d91152de5ce902ec2980$import$f02ba03fc070e88c$575893c07881cfe8(null);
    var container = $807566ffb805d91152de5ce902ec2980$import$f02ba03fc070e88c$575893c07881cfe8(null);
    $807566ffb805d91152de5ce902ec2980$import$f02ba03fc070e88c$7e977b4ca969aabd(function() {
        return function() {
            clearTimeout(startTimer.current);
        };
    }, []);
    var startCommit = $807566ffb805d91152de5ce902ec2980$import$f02ba03fc070e88c$e04575e0186a275b(function(params) {
        var pulsate = params.pulsate, rippleX = params.rippleX, rippleY = params.rippleY, rippleSize = params.rippleSize, cb = params.cb;
        setRipples(function(oldRipples) {
            return [].concat($807566ffb805d91152de5ce902ec2980$import$4d3a86197f512b9$9099ad97b570f7c(oldRipples), [
                /*#__PURE__*/ $807566ffb805d91152de5ce902ec2980$import$f02ba03fc070e88c$2f8418d37d4320b9($807566ffb805d91152de5ce902ec2980$import$410cbcd93f49a571$9099ad97b570f7c, {
                    key: nextKey.current,
                    classes: classes,
                    timeout: $807566ffb805d91152de5ce902ec2980$var$DURATION,
                    pulsate: pulsate,
                    rippleX: rippleX,
                    rippleY: rippleY,
                    rippleSize: rippleSize
                })
            ]);
        });
        nextKey.current += 1;
        rippleCallback.current = cb;
    }, [
        classes
    ]);
    var start = $807566ffb805d91152de5ce902ec2980$import$f02ba03fc070e88c$e04575e0186a275b(function() {
        var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        };
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
        };
        var cb = arguments.length > 2 ? arguments[2] : undefined;
        var _options$pulsate = options.pulsate, pulsate = _options$pulsate === void 0 ? false : _options$pulsate, _options$center = options.center, center = _options$center === void 0 ? centerProp || options.pulsate : _options$center, _options$fakeElement = options.fakeElement, fakeElement = _options$fakeElement === void 0 ? false : _options$fakeElement;
        if (event.type === 'mousedown' && ignoringMouseDown.current) {
            ignoringMouseDown.current = false;
            return;
        }
        if (event.type === 'touchstart') ignoringMouseDown.current = true;
        var element = fakeElement ? null : container.current;
        var rect = element ? element.getBoundingClientRect() : {
            width: 0,
            height: 0,
            left: 0,
            top: 0
        }; // Get the size of the ripple
        var rippleX;
        var rippleY;
        var rippleSize;
        if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {
            rippleX = Math.round(rect.width / 2);
            rippleY = Math.round(rect.height / 2);
        } else {
            var _ref = event.touches ? event.touches[0] : event, clientX = _ref.clientX, clientY = _ref.clientY;
            rippleX = Math.round(clientX - rect.left);
            rippleY = Math.round(clientY - rect.top);
        }
        if (center) {
            rippleSize = Math.sqrt((2 * Math.pow(rect.width, 2) + Math.pow(rect.height, 2)) / 3); // For some reason the animation is broken on Mobile Chrome if the size if even.
            if (rippleSize % 2 === 0) rippleSize += 1;
        } else {
            var sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;
            var sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;
            rippleSize = Math.sqrt(Math.pow(sizeX, 2) + Math.pow(sizeY, 2));
        } // Touche devices
        if (event.touches) // check that this isn't another touchstart due to multitouch
        // otherwise we will only clear a single timer when unmounting while two
        // are running
        {
            if (startTimerCommit.current === null) {
                // Prepare the ripple effect.
                startTimerCommit.current = function() {
                    startCommit({
                        pulsate: pulsate,
                        rippleX: rippleX,
                        rippleY: rippleY,
                        rippleSize: rippleSize,
                        cb: cb
                    });
                }; // Delay the execution of the ripple effect.
                startTimer.current = setTimeout(function() {
                    if (startTimerCommit.current) {
                        startTimerCommit.current();
                        startTimerCommit.current = null;
                    }
                }, $807566ffb805d91152de5ce902ec2980$export$a4abb88db07c21de); // We have to make a tradeoff with this value.
            }
        } else startCommit({
            pulsate: pulsate,
            rippleX: rippleX,
            rippleY: rippleY,
            rippleSize: rippleSize,
            cb: cb
        });
    }, [
        centerProp,
        startCommit
    ]);
    var pulsate = $807566ffb805d91152de5ce902ec2980$import$f02ba03fc070e88c$e04575e0186a275b(function() {
        start({
        }, {
            pulsate: true
        });
    }, [
        start
    ]);
    var stop = $807566ffb805d91152de5ce902ec2980$import$f02ba03fc070e88c$e04575e0186a275b(function(event, cb) {
        clearTimeout(startTimer.current); // The touch interaction occurs too quickly.
        // We still want to show ripple effect.
        if (event.type === 'touchend' && startTimerCommit.current) {
            event.persist();
            startTimerCommit.current();
            startTimerCommit.current = null;
            startTimer.current = setTimeout(function() {
                stop(event, cb);
            });
            return;
        }
        startTimerCommit.current = null;
        setRipples(function(oldRipples) {
            if (oldRipples.length > 0) return oldRipples.slice(1);
            return oldRipples;
        });
        rippleCallback.current = cb;
    }, []);
    $807566ffb805d91152de5ce902ec2980$import$f02ba03fc070e88c$718bc1f42abf35a1(ref, function() {
        return {
            pulsate: pulsate,
            start: start,
            stop: stop
        };
    }, [
        pulsate,
        start,
        stop
    ]);
    return(/*#__PURE__*/ $807566ffb805d91152de5ce902ec2980$import$f02ba03fc070e88c$2f8418d37d4320b9("span", $807566ffb805d91152de5ce902ec2980$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
        className: $807566ffb805d91152de5ce902ec2980$import$3e54c96927a352a4$9099ad97b570f7c(classes.root, className),
        ref: container
    }, other), /*#__PURE__*/ $807566ffb805d91152de5ce902ec2980$import$f02ba03fc070e88c$2f8418d37d4320b9($807566ffb805d91152de5ce902ec2980$import$b5d0cefceca9e025$ee8a4dfd8fcd827b, {
        component: null,
        exit: true
    }, ripples)));
});
var $807566ffb805d91152de5ce902ec2980$export$9099ad97b570f7c = $807566ffb805d91152de5ce902ec2980$import$abdf0c7fda13cc01$9099ad97b570f7c($807566ffb805d91152de5ce902ec2980$export$1155669653ed4fad, {
    flip: false,
    name: 'MuiTouchRipple'
})(/*#__PURE__*/ $807566ffb805d91152de5ce902ec2980$import$f02ba03fc070e88c$ce1de884d18aca73($807566ffb805d91152de5ce902ec2980$var$TouchRipple));
