import   "e30087709b93daaf802eb613b4e40c9c:@babel/runtime/helpers/esm/extends";
import   "e30087709b93daaf802eb613b4e40c9c:@babel/runtime/helpers/esm/objectWithoutProperties";
import   "e30087709b93daaf802eb613b4e40c9c:@material-ui/utils";
function $e30087709b93daaf802eb613b4e40c9c$var$round(value) {
    return Math.round(value * 100000) / 100000;
}
var $e30087709b93daaf802eb613b4e40c9c$var$warnedOnce = false;
function $e30087709b93daaf802eb613b4e40c9c$var$roundWithDeprecationWarning(value) {
    return $e30087709b93daaf802eb613b4e40c9c$var$round(value);
}
var $e30087709b93daaf802eb613b4e40c9c$var$caseAllCaps = {
    textTransform: 'uppercase'
};
var $e30087709b93daaf802eb613b4e40c9c$var$defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';
function $e30087709b93daaf802eb613b4e40c9c$export$9099ad97b570f7c(palette, typography) {
    var _ref = typeof typography === 'function' ? typography(palette) : typography, _ref$fontFamily = _ref.fontFamily, fontFamily = _ref$fontFamily === void 0 ? $e30087709b93daaf802eb613b4e40c9c$var$defaultFontFamily : _ref$fontFamily, _ref$fontSize = _ref.fontSize, fontSize = _ref$fontSize === void 0 ? 14 : _ref$fontSize, _ref$fontWeightLight = _ref.fontWeightLight, fontWeightLight = _ref$fontWeightLight === void 0 ? 300 : _ref$fontWeightLight, _ref$fontWeightRegula = _ref.fontWeightRegular, fontWeightRegular = _ref$fontWeightRegula === void 0 ? 400 : _ref$fontWeightRegula, _ref$fontWeightMedium = _ref.fontWeightMedium, fontWeightMedium = _ref$fontWeightMedium === void 0 ? 500 : _ref$fontWeightMedium, _ref$fontWeightBold = _ref.fontWeightBold, fontWeightBold = _ref$fontWeightBold === void 0 ? 700 : _ref$fontWeightBold, _ref$htmlFontSize = _ref.htmlFontSize, htmlFontSize = _ref$htmlFontSize === void 0 ? 16 : _ref$htmlFontSize, allVariants = _ref.allVariants, pxToRem2 = _ref.pxToRem, other = $e30087709b93daaf802eb613b4e40c9c$import$e114c77af6cc4d77$9099ad97b570f7c(_ref, [
        "fontFamily",
        "fontSize",
        "fontWeightLight",
        "fontWeightRegular",
        "fontWeightMedium",
        "fontWeightBold",
        "htmlFontSize",
        "allVariants",
        "pxToRem"
    ]);
    var coef = fontSize / 14;
    var pxToRem = pxToRem2 || function(size) {
        return "".concat(size / htmlFontSize * coef, "rem");
    };
    var buildVariant = function buildVariant1(fontWeight, size, lineHeight, letterSpacing, casing) {
        return $e30087709b93daaf802eb613b4e40c9c$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
            fontFamily: fontFamily,
            fontWeight: fontWeight,
            fontSize: pxToRem(size),
            // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
            lineHeight: lineHeight
        }, fontFamily === $e30087709b93daaf802eb613b4e40c9c$var$defaultFontFamily ? {
            letterSpacing: "".concat($e30087709b93daaf802eb613b4e40c9c$var$round(letterSpacing / size), "em")
        } : {
        }, casing, allVariants);
    };
    var variants = {
        h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),
        h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),
        h3: buildVariant(fontWeightRegular, 48, 1.167, 0),
        h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),
        h5: buildVariant(fontWeightRegular, 24, 1.334, 0),
        h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),
        subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),
        subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),
        body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),
        body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),
        button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, $e30087709b93daaf802eb613b4e40c9c$var$caseAllCaps),
        caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),
        overline: buildVariant(fontWeightRegular, 12, 2.66, 1, $e30087709b93daaf802eb613b4e40c9c$var$caseAllCaps)
    };
    return $e30087709b93daaf802eb613b4e40c9c$import$4ddfa5b020de25c6$47703990c37189f4($e30087709b93daaf802eb613b4e40c9c$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
        htmlFontSize: htmlFontSize,
        pxToRem: pxToRem,
        round: $e30087709b93daaf802eb613b4e40c9c$var$roundWithDeprecationWarning,
        // TODO v5: remove
        fontFamily: fontFamily,
        fontSize: fontSize,
        fontWeightLight: fontWeightLight,
        fontWeightRegular: fontWeightRegular,
        fontWeightMedium: fontWeightMedium,
        fontWeightBold: fontWeightBold
    }, variants), other, {
        clone: false
    });
}
