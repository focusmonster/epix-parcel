import   "ed70c499366641dca80145044eabcb0f:@babel/runtime/helpers/esm/extends";
import   "ed70c499366641dca80145044eabcb0f:@babel/runtime/helpers/esm/objectWithoutProperties";
import   "ed70c499366641dca80145044eabcb0f:react";
import   "ed70c499366641dca80145044eabcb0f:prop-types";
import   "ed70c499366641dca80145044eabcb0f:clsx";
import   "ed70c499366641dca80145044eabcb0f:../utils/capitalize";
import   "ed70c499366641dca80145044eabcb0f:../styles/withStyles";
import   "ed70c499366641dca80145044eabcb0f:../styles/colorManipulator";
import   "ed70c499366641dca80145044eabcb0f:../styles/useTheme";
var $ed70c499366641dca80145044eabcb0f$var$TRANSITION_DURATION = 4; // seconds
var $ed70c499366641dca80145044eabcb0f$export$1155669653ed4fad = function styles(theme) {
    var getColor = function getColor1(color) {
        return theme.palette.type === 'light' ? $ed70c499366641dca80145044eabcb0f$import$78cd920a0798486b$4b2aa9509b3a299c(color, 0.62) : $ed70c499366641dca80145044eabcb0f$import$78cd920a0798486b$35364ebff010920c(color, 0.5);
    };
    var backgroundPrimary = getColor(theme.palette.primary.main);
    var backgroundSecondary = getColor(theme.palette.secondary.main);
    return {
        /* Styles applied to the root element. */ root: {
            position: 'relative',
            overflow: 'hidden',
            height: 4,
            '@media print': {
                colorAdjust: 'exact'
            }
        },
        /* Styles applied to the root and bar2 element if `color="primary"`; bar2 if `variant="buffer"`. */ colorPrimary: {
            backgroundColor: backgroundPrimary
        },
        /* Styles applied to the root and bar2 elements if `color="secondary"`; bar2 if `variant="buffer"`. */ colorSecondary: {
            backgroundColor: backgroundSecondary
        },
        /* Styles applied to the root element if `variant="determinate"`. */ determinate: {
        },
        /* Styles applied to the root element if `variant="indeterminate"`. */ indeterminate: {
        },
        /* Styles applied to the root element if `variant="buffer"`. */ buffer: {
            backgroundColor: 'transparent'
        },
        /* Styles applied to the root element if `variant="query"`. */ query: {
            transform: 'rotate(180deg)'
        },
        /* Styles applied to the additional bar element if `variant="buffer"`. */ dashed: {
            position: 'absolute',
            marginTop: 0,
            height: '100%',
            width: '100%',
            animation: '$buffer 3s infinite linear'
        },
        /* Styles applied to the additional bar element if `variant="buffer"` and `color="primary"`. */ dashedColorPrimary: {
            backgroundImage: "radial-gradient(".concat(backgroundPrimary, " 0%, ").concat(backgroundPrimary, " 16%, transparent 42%)"),
            backgroundSize: '10px 10px',
            backgroundPosition: '0 -23px'
        },
        /* Styles applied to the additional bar element if `variant="buffer"` and `color="secondary"`. */ dashedColorSecondary: {
            backgroundImage: "radial-gradient(".concat(backgroundSecondary, " 0%, ").concat(backgroundSecondary, " 16%, transparent 42%)"),
            backgroundSize: '10px 10px',
            backgroundPosition: '0 -23px'
        },
        /* Styles applied to the layered bar1 and bar2 elements. */ bar: {
            width: '100%',
            position: 'absolute',
            left: 0,
            bottom: 0,
            top: 0,
            transition: 'transform 0.2s linear',
            transformOrigin: 'left'
        },
        /* Styles applied to the bar elements if `color="primary"`; bar2 if `variant` not "buffer". */ barColorPrimary: {
            backgroundColor: theme.palette.primary.main
        },
        /* Styles applied to the bar elements if `color="secondary"`; bar2 if `variant` not "buffer". */ barColorSecondary: {
            backgroundColor: theme.palette.secondary.main
        },
        /* Styles applied to the bar1 element if `variant="indeterminate or query"`. */ bar1Indeterminate: {
            width: 'auto',
            animation: '$indeterminate1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite'
        },
        /* Styles applied to the bar1 element if `variant="determinate"`. */ bar1Determinate: {
            transition: "transform .".concat($ed70c499366641dca80145044eabcb0f$var$TRANSITION_DURATION, "s linear")
        },
        /* Styles applied to the bar1 element if `variant="buffer"`. */ bar1Buffer: {
            zIndex: 1,
            transition: "transform .".concat($ed70c499366641dca80145044eabcb0f$var$TRANSITION_DURATION, "s linear")
        },
        /* Styles applied to the bar2 element if `variant="indeterminate or query"`. */ bar2Indeterminate: {
            width: 'auto',
            animation: '$indeterminate2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite'
        },
        /* Styles applied to the bar2 element if `variant="buffer"`. */ bar2Buffer: {
            transition: "transform .".concat($ed70c499366641dca80145044eabcb0f$var$TRANSITION_DURATION, "s linear")
        },
        // Legends:
        // || represents the viewport
        // -  represents a light background
        // x  represents a dark background
        '@keyframes indeterminate1': {
            //  |-----|---x-||-----||-----|
            '0%': {
                left: '-35%',
                right: '100%'
            },
            //  |-----|-----||-----||xxxx-|
            '60%': {
                left: '100%',
                right: '-90%'
            },
            '100%': {
                left: '100%',
                right: '-90%'
            }
        },
        '@keyframes indeterminate2': {
            //  |xxxxx|xxxxx||-----||-----|
            '0%': {
                left: '-200%',
                right: '100%'
            },
            //  |-----|-----||-----||-x----|
            '60%': {
                left: '107%',
                right: '-8%'
            },
            '100%': {
                left: '107%',
                right: '-8%'
            }
        },
        '@keyframes buffer': {
            '0%': {
                opacity: 1,
                backgroundPosition: '0 -23px'
            },
            '50%': {
                opacity: 0,
                backgroundPosition: '0 -23px'
            },
            '100%': {
                opacity: 1,
                backgroundPosition: '-200px -23px'
            }
        }
    };
};
/**
 * ## ARIA
 *
 * If the progress bar is describing the loading progress of a particular region of a page,
 * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`
 * attribute to `true` on that region until it has finished loading.
 */ var $ed70c499366641dca80145044eabcb0f$var$LinearProgress = /*#__PURE__*/ $ed70c499366641dca80145044eabcb0f$import$f02ba03fc070e88c$ac92bb288368c37c(function LinearProgress(props, ref) {
    var classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'primary' : _props$color, value = props.value, valueBuffer = props.valueBuffer, _props$variant = props.variant, variant = _props$variant === void 0 ? 'indeterminate' : _props$variant, other = $ed70c499366641dca80145044eabcb0f$import$e114c77af6cc4d77$9099ad97b570f7c(props, [
        "classes",
        "className",
        "color",
        "value",
        "valueBuffer",
        "variant"
    ]);
    var theme = $ed70c499366641dca80145044eabcb0f$import$d08d112fbc8a4e1d$9099ad97b570f7c();
    var rootProps = {
    };
    var inlineStyles = {
        bar1: {
        },
        bar2: {
        }
    };
    if (variant === 'determinate' || variant === 'buffer') {
        if (value !== undefined) {
            rootProps['aria-valuenow'] = Math.round(value);
            rootProps['aria-valuemin'] = 0;
            rootProps['aria-valuemax'] = 100;
            var transform = value - 100;
            if (theme.direction === 'rtl') transform = -transform;
            inlineStyles.bar1.transform = "translateX(".concat(transform, "%)");
        }
    }
    if (variant === 'buffer') {
        if (valueBuffer !== undefined) {
            var _transform = (valueBuffer || 0) - 100;
            if (theme.direction === 'rtl') _transform = -_transform;
            inlineStyles.bar2.transform = "translateX(".concat(_transform, "%)");
        }
    }
    return(/*#__PURE__*/ $ed70c499366641dca80145044eabcb0f$import$f02ba03fc070e88c$2f8418d37d4320b9("div", $ed70c499366641dca80145044eabcb0f$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
        className: $ed70c499366641dca80145044eabcb0f$import$3e54c96927a352a4$9099ad97b570f7c(classes.root, classes["color".concat($ed70c499366641dca80145044eabcb0f$import$f35500a7ba1578c4$9099ad97b570f7c(color))], className, {
            'determinate': classes.determinate,
            'indeterminate': classes.indeterminate,
            'buffer': classes.buffer,
            'query': classes.query
        }[variant]),
        role: "progressbar"
    }, rootProps, {
        ref: ref
    }, other), variant === 'buffer' ? /*#__PURE__*/ $ed70c499366641dca80145044eabcb0f$import$f02ba03fc070e88c$2f8418d37d4320b9("div", {
        className: $ed70c499366641dca80145044eabcb0f$import$3e54c96927a352a4$9099ad97b570f7c(classes.dashed, classes["dashedColor".concat($ed70c499366641dca80145044eabcb0f$import$f35500a7ba1578c4$9099ad97b570f7c(color))])
    }) : null, /*#__PURE__*/ $ed70c499366641dca80145044eabcb0f$import$f02ba03fc070e88c$2f8418d37d4320b9("div", {
        className: $ed70c499366641dca80145044eabcb0f$import$3e54c96927a352a4$9099ad97b570f7c(classes.bar, classes["barColor".concat($ed70c499366641dca80145044eabcb0f$import$f35500a7ba1578c4$9099ad97b570f7c(color))], (variant === 'indeterminate' || variant === 'query') && classes.bar1Indeterminate, {
            'determinate': classes.bar1Determinate,
            'buffer': classes.bar1Buffer
        }[variant]),
        style: inlineStyles.bar1
    }), variant === 'determinate' ? null : /*#__PURE__*/ $ed70c499366641dca80145044eabcb0f$import$f02ba03fc070e88c$2f8418d37d4320b9("div", {
        className: $ed70c499366641dca80145044eabcb0f$import$3e54c96927a352a4$9099ad97b570f7c(classes.bar, (variant === 'indeterminate' || variant === 'query') && classes.bar2Indeterminate, variant === 'buffer' ? [
            classes["color".concat($ed70c499366641dca80145044eabcb0f$import$f35500a7ba1578c4$9099ad97b570f7c(color))],
            classes.bar2Buffer
        ] : classes["barColor".concat($ed70c499366641dca80145044eabcb0f$import$f35500a7ba1578c4$9099ad97b570f7c(color))]),
        style: inlineStyles.bar2
    })));
});
var $ed70c499366641dca80145044eabcb0f$export$9099ad97b570f7c = $ed70c499366641dca80145044eabcb0f$import$abdf0c7fda13cc01$9099ad97b570f7c($ed70c499366641dca80145044eabcb0f$export$1155669653ed4fad, {
    name: 'MuiLinearProgress'
})($ed70c499366641dca80145044eabcb0f$var$LinearProgress);
