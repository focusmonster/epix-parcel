import   "c0bca50b7b6955f0c31ca751a3fc4b9f:@babel/runtime/helpers/esm/extends";
import   "c0bca50b7b6955f0c31ca751a3fc4b9f:@babel/runtime/helpers/esm/objectWithoutProperties";
import   "c0bca50b7b6955f0c31ca751a3fc4b9f:react";
import   "c0bca50b7b6955f0c31ca751a3fc4b9f:prop-types";
import   "c0bca50b7b6955f0c31ca751a3fc4b9f:clsx";
import   "c0bca50b7b6955f0c31ca751a3fc4b9f:@material-ui/utils";
import   "c0bca50b7b6955f0c31ca751a3fc4b9f:../FormControl";
import   "c0bca50b7b6955f0c31ca751a3fc4b9f:../styles/withStyles";
import   "c0bca50b7b6955f0c31ca751a3fc4b9f:../Typography";
import   "c0bca50b7b6955f0c31ca751a3fc4b9f:../utils/capitalize";
var $c0bca50b7b6955f0c31ca751a3fc4b9f$export$1155669653ed4fad = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: {
            display: 'inline-flex',
            alignItems: 'center',
            cursor: 'pointer',
            // For correct alignment with the text.
            verticalAlign: 'middle',
            WebkitTapHighlightColor: 'transparent',
            marginLeft: -11,
            marginRight: 16,
            // used for row presentation of radio/checkbox
            '&$disabled': {
                cursor: 'default'
            }
        },
        /* Styles applied to the root element if `labelPlacement="start"`. */ labelPlacementStart: {
            flexDirection: 'row-reverse',
            marginLeft: 16,
            // used for row presentation of radio/checkbox
            marginRight: -11
        },
        /* Styles applied to the root element if `labelPlacement="top"`. */ labelPlacementTop: {
            flexDirection: 'column-reverse',
            marginLeft: 16
        },
        /* Styles applied to the root element if `labelPlacement="bottom"`. */ labelPlacementBottom: {
            flexDirection: 'column',
            marginLeft: 16
        },
        /* Pseudo-class applied to the root element if `disabled={true}`. */ disabled: {
        },
        /* Styles applied to the label's Typography component. */ label: {
            '&$disabled': {
                color: theme.palette.text.disabled
            }
        }
    };
};
/**
 * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.
 * Use this component if you want to display an extra label.
 */ var $c0bca50b7b6955f0c31ca751a3fc4b9f$var$FormControlLabel = /*#__PURE__*/ $c0bca50b7b6955f0c31ca751a3fc4b9f$import$f02ba03fc070e88c$ac92bb288368c37c(function FormControlLabel(props, ref) {
    var checked = props.checked, classes = props.classes, className = props.className, control = props.control, disabledProp = props.disabled, inputRef = props.inputRef, label = props.label, _props$labelPlacement = props.labelPlacement, labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement, name = props.name, onChange = props.onChange, value = props.value, other = $c0bca50b7b6955f0c31ca751a3fc4b9f$import$e114c77af6cc4d77$9099ad97b570f7c(props, [
        "checked",
        "classes",
        "className",
        "control",
        "disabled",
        "inputRef",
        "label",
        "labelPlacement",
        "name",
        "onChange",
        "value"
    ]);
    var muiFormControl = $c0bca50b7b6955f0c31ca751a3fc4b9f$import$ae556e9964d03600$b1f65b92be1a279b();
    var disabled = disabledProp;
    if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') disabled = control.props.disabled;
    if (typeof disabled === 'undefined' && muiFormControl) disabled = muiFormControl.disabled;
    var controlProps = {
        disabled: disabled
    };
    [
        'checked',
        'name',
        'onChange',
        'value',
        'inputRef'
    ].forEach(function(key) {
        if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') controlProps[key] = props[key];
    });
    return(/*#__PURE__*/ $c0bca50b7b6955f0c31ca751a3fc4b9f$import$f02ba03fc070e88c$2f8418d37d4320b9("label", $c0bca50b7b6955f0c31ca751a3fc4b9f$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
        className: $c0bca50b7b6955f0c31ca751a3fc4b9f$import$3e54c96927a352a4$9099ad97b570f7c(classes.root, className, labelPlacement !== 'end' && classes["labelPlacement".concat($c0bca50b7b6955f0c31ca751a3fc4b9f$import$f35500a7ba1578c4$9099ad97b570f7c(labelPlacement))], disabled && classes.disabled),
        ref: ref
    }, other), /*#__PURE__*/ $c0bca50b7b6955f0c31ca751a3fc4b9f$import$f02ba03fc070e88c$228915fa085e29fe(control, controlProps), /*#__PURE__*/ $c0bca50b7b6955f0c31ca751a3fc4b9f$import$f02ba03fc070e88c$2f8418d37d4320b9($c0bca50b7b6955f0c31ca751a3fc4b9f$import$ffac14c38e6e39b9$9099ad97b570f7c, {
        component: "span",
        className: $c0bca50b7b6955f0c31ca751a3fc4b9f$import$3e54c96927a352a4$9099ad97b570f7c(classes.label, disabled && classes.disabled)
    }, label)));
});
var $c0bca50b7b6955f0c31ca751a3fc4b9f$export$9099ad97b570f7c = $c0bca50b7b6955f0c31ca751a3fc4b9f$import$abdf0c7fda13cc01$9099ad97b570f7c($c0bca50b7b6955f0c31ca751a3fc4b9f$export$1155669653ed4fad, {
    name: 'MuiFormControlLabel'
})($c0bca50b7b6955f0c31ca751a3fc4b9f$var$FormControlLabel);
