import   "97e7b7d1359aab8ab2f182f217a87a04:@babel/runtime/helpers/esm/extends";
import   "97e7b7d1359aab8ab2f182f217a87a04:react";
import   "97e7b7d1359aab8ab2f182f217a87a04:prop-types";
import   "97e7b7d1359aab8ab2f182f217a87a04:@material-ui/utils";
import   "97e7b7d1359aab8ab2f182f217a87a04:../useTheme/ThemeContext";
import   "97e7b7d1359aab8ab2f182f217a87a04:../useTheme";
import   "97e7b7d1359aab8ab2f182f217a87a04:./nested";
function $97e7b7d1359aab8ab2f182f217a87a04$var$mergeOuterLocalTheme(outerTheme, localTheme) {
    if (typeof localTheme === 'function') {
        var mergedTheme = localTheme(outerTheme);
        return mergedTheme;
    }
    return $97e7b7d1359aab8ab2f182f217a87a04$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
    }, outerTheme, localTheme);
}
/**
 * This component takes a `theme` prop.
 * It makes the `theme` available down the React tree thanks to React context.
 * This component should preferably be used at **the root of your component tree**.
 */ function $97e7b7d1359aab8ab2f182f217a87a04$var$ThemeProvider(props) {
    var children = props.children, localTheme = props.theme;
    var outerTheme = $97e7b7d1359aab8ab2f182f217a87a04$import$cd58002ab20c36b6$9099ad97b570f7c();
    var theme = $97e7b7d1359aab8ab2f182f217a87a04$import$f02ba03fc070e88c$9099ad97b570f7c.useMemo(function() {
        var output = outerTheme === null ? localTheme : $97e7b7d1359aab8ab2f182f217a87a04$var$mergeOuterLocalTheme(outerTheme, localTheme);
        if (output != null) output[$97e7b7d1359aab8ab2f182f217a87a04$import$7f7a4fe15ec191$9099ad97b570f7c] = outerTheme !== null;
        return output;
    }, [
        localTheme,
        outerTheme
    ]);
    return(/*#__PURE__*/ $97e7b7d1359aab8ab2f182f217a87a04$import$f02ba03fc070e88c$9099ad97b570f7c.createElement($97e7b7d1359aab8ab2f182f217a87a04$import$7c85c64efd0fb606$9099ad97b570f7c.Provider, {
        value: theme
    }, children));
}
var $97e7b7d1359aab8ab2f182f217a87a04$export$9099ad97b570f7c = $97e7b7d1359aab8ab2f182f217a87a04$var$ThemeProvider;
