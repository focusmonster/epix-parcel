import   "ab8e5bb9e2b48b1f45609ae8fb376946:@babel/runtime/helpers/esm/extends";
import   "ab8e5bb9e2b48b1f45609ae8fb376946:@babel/runtime/helpers/esm/objectWithoutProperties";
import   "ab8e5bb9e2b48b1f45609ae8fb376946:react";
import   "ab8e5bb9e2b48b1f45609ae8fb376946:prop-types";
import   "ab8e5bb9e2b48b1f45609ae8fb376946:clsx";
import   "ab8e5bb9e2b48b1f45609ae8fb376946:../utils/capitalize";
import   "ab8e5bb9e2b48b1f45609ae8fb376946:../styles/withStyles";
import   "ab8e5bb9e2b48b1f45609ae8fb376946:@material-ui/utils";
import   "ab8e5bb9e2b48b1f45609ae8fb376946:../utils/useIsFocusVisible";
import   "ab8e5bb9e2b48b1f45609ae8fb376946:../utils/useForkRef";
import   "ab8e5bb9e2b48b1f45609ae8fb376946:../Typography";
var $ab8e5bb9e2b48b1f45609ae8fb376946$export$1155669653ed4fad = {
    /* Styles applied to the root element. */ root: {
    },
    /* Styles applied to the root element if `underline="none"`. */ underlineNone: {
        textDecoration: 'none'
    },
    /* Styles applied to the root element if `underline="hover"`. */ underlineHover: {
        textDecoration: 'none',
        '&:hover': {
            textDecoration: 'underline'
        }
    },
    /* Styles applied to the root element if `underline="always"`. */ underlineAlways: {
        textDecoration: 'underline'
    },
    // Same reset as ButtonBase.root
    /* Styles applied to the root element if `component="button"`. */ button: {
        position: 'relative',
        WebkitTapHighlightColor: 'transparent',
        backgroundColor: 'transparent',
        // Reset default value
        // We disable the focus ring for mouse, touch and keyboard users.
        outline: 0,
        border: 0,
        margin: 0,
        // Remove the margin in Safari
        borderRadius: 0,
        padding: 0,
        // Remove the padding in Firefox
        cursor: 'pointer',
        userSelect: 'none',
        verticalAlign: 'middle',
        '-moz-appearance': 'none',
        // Reset
        '-webkit-appearance': 'none',
        // Reset
        '&::-moz-focus-inner': {
            borderStyle: 'none'
        },
        '&$focusVisible': {
            outline: 'auto'
        }
    },
    /* Pseudo-class applied to the root element if the link is keyboard focused. */ focusVisible: {
    }
};
var $ab8e5bb9e2b48b1f45609ae8fb376946$var$Link = /*#__PURE__*/ $ab8e5bb9e2b48b1f45609ae8fb376946$import$f02ba03fc070e88c$ac92bb288368c37c(function Link(props, ref) {
    var classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'primary' : _props$color, _props$component = props.component, component = _props$component === void 0 ? 'a' : _props$component, onBlur = props.onBlur, onFocus = props.onFocus, TypographyClasses = props.TypographyClasses, _props$underline = props.underline, underline = _props$underline === void 0 ? 'hover' : _props$underline, _props$variant = props.variant, variant = _props$variant === void 0 ? 'inherit' : _props$variant, other = $ab8e5bb9e2b48b1f45609ae8fb376946$import$e114c77af6cc4d77$9099ad97b570f7c(props, [
        "classes",
        "className",
        "color",
        "component",
        "onBlur",
        "onFocus",
        "TypographyClasses",
        "underline",
        "variant"
    ]);
    var _useIsFocusVisible = $ab8e5bb9e2b48b1f45609ae8fb376946$import$c345deb6b32231c9$9099ad97b570f7c(), isFocusVisible = _useIsFocusVisible.isFocusVisible, onBlurVisible = _useIsFocusVisible.onBlurVisible, focusVisibleRef = _useIsFocusVisible.ref;
    var _React$useState = $ab8e5bb9e2b48b1f45609ae8fb376946$import$f02ba03fc070e88c$f54936751fc2c51(false), focusVisible = _React$useState[0], setFocusVisible = _React$useState[1];
    var handlerRef = $ab8e5bb9e2b48b1f45609ae8fb376946$import$f0ac2eb29a789ac2$9099ad97b570f7c(ref, focusVisibleRef);
    var handleBlur = function handleBlur1(event) {
        if (focusVisible) {
            onBlurVisible();
            setFocusVisible(false);
        }
        if (onBlur) onBlur(event);
    };
    var handleFocus = function handleFocus1(event) {
        if (isFocusVisible(event)) setFocusVisible(true);
        if (onFocus) onFocus(event);
    };
    return(/*#__PURE__*/ $ab8e5bb9e2b48b1f45609ae8fb376946$import$f02ba03fc070e88c$2f8418d37d4320b9($ab8e5bb9e2b48b1f45609ae8fb376946$import$ffac14c38e6e39b9$9099ad97b570f7c, $ab8e5bb9e2b48b1f45609ae8fb376946$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
        className: $ab8e5bb9e2b48b1f45609ae8fb376946$import$3e54c96927a352a4$9099ad97b570f7c(classes.root, classes["underline".concat($ab8e5bb9e2b48b1f45609ae8fb376946$import$f35500a7ba1578c4$9099ad97b570f7c(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),
        classes: TypographyClasses,
        color: color,
        component: component,
        onBlur: handleBlur,
        onFocus: handleFocus,
        ref: handlerRef,
        variant: variant
    }, other)));
});
var $ab8e5bb9e2b48b1f45609ae8fb376946$export$9099ad97b570f7c = $ab8e5bb9e2b48b1f45609ae8fb376946$import$abdf0c7fda13cc01$9099ad97b570f7c($ab8e5bb9e2b48b1f45609ae8fb376946$export$1155669653ed4fad, {
    name: 'MuiLink'
})($ab8e5bb9e2b48b1f45609ae8fb376946$var$Link);
