import   "8595b77d3404e0e34e57d52aab224716:@babel/runtime/helpers/esm/extends";
import   "8595b77d3404e0e34e57d52aab224716:./merge";
function $8595b77d3404e0e34e57d52aab224716$var$compose() {
    for(var _len = arguments.length, styles = new Array(_len), _key = 0; _key < _len; _key++)styles[_key] = arguments[_key];
    var fn = function fn1(props) {
        return styles.reduce(function(acc, style) {
            var output = style(props);
            if (output) return $8595b77d3404e0e34e57d52aab224716$import$1d8eb37588603931$9099ad97b570f7c(acc, output);
            return acc;
        }, {
        });
    }; // Alternative approach that doesn't yield any performance gain.
    // const handlers = styles.reduce((acc, style) => {
    //   style.filterProps.forEach(prop => {
    //     acc[prop] = style;
    //   });
    //   return acc;
    // }, {});
    // const fn = props => {
    //   return Object.keys(props).reduce((acc, prop) => {
    //     if (handlers[prop]) {
    //       return merge(acc, handlers[prop](props));
    //     }
    //     return acc;
    //   }, {});
    // };
    fn.propTypes = {
    };
    fn.filterProps = styles.reduce(function(acc, style) {
        return acc.concat(style.filterProps);
    }, []);
    return fn;
}
var $8595b77d3404e0e34e57d52aab224716$export$9099ad97b570f7c = $8595b77d3404e0e34e57d52aab224716$var$compose;
