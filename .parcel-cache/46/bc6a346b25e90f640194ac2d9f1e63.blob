import   "821c5a1aa10def40e534331978376949:@babel/runtime/helpers/esm/objectWithoutProperties";
import   "821c5a1aa10def40e534331978376949:@babel/runtime/helpers/esm/extends";
import   "821c5a1aa10def40e534331978376949:react";
import   "821c5a1aa10def40e534331978376949:prop-types";
import   "821c5a1aa10def40e534331978376949:clsx";
import   "821c5a1aa10def40e534331978376949:@material-ui/utils";
import   "821c5a1aa10def40e534331978376949:../styles/withStyles";
import   "821c5a1aa10def40e534331978376949:../ButtonBase";
import   "821c5a1aa10def40e534331978376949:../utils/capitalize";
var $821c5a1aa10def40e534331978376949$export$1155669653ed4fad = function styles(theme) {
    return {
        /* Styles applied to the root element. */ root: $821c5a1aa10def40e534331978376949$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
        }, theme.typography.button, {
            boxSizing: 'border-box',
            minHeight: 36,
            transition: theme.transitions.create([
                'background-color',
                'box-shadow',
                'border'
            ], {
                duration: theme.transitions.duration.short
            }),
            borderRadius: '50%',
            padding: 0,
            minWidth: 0,
            width: 56,
            height: 56,
            boxShadow: theme.shadows[6],
            '&:active': {
                boxShadow: theme.shadows[12]
            },
            color: theme.palette.getContrastText(theme.palette.grey[300]),
            backgroundColor: theme.palette.grey[300],
            '&:hover': {
                backgroundColor: theme.palette.grey.A100,
                // Reset on touch devices, it doesn't add specificity
                '@media (hover: none)': {
                    backgroundColor: theme.palette.grey[300]
                },
                '&$disabled': {
                    backgroundColor: theme.palette.action.disabledBackground
                },
                textDecoration: 'none'
            },
            '&$focusVisible': {
                boxShadow: theme.shadows[6]
            },
            '&$disabled': {
                color: theme.palette.action.disabled,
                boxShadow: theme.shadows[0],
                backgroundColor: theme.palette.action.disabledBackground
            }
        }),
        /* Styles applied to the span element that wraps the children. */ label: {
            width: '100%',
            // assure the correct width for iOS Safari
            display: 'inherit',
            alignItems: 'inherit',
            justifyContent: 'inherit'
        },
        /* Styles applied to the root element if `color="primary"`. */ primary: {
            color: theme.palette.primary.contrastText,
            backgroundColor: theme.palette.primary.main,
            '&:hover': {
                backgroundColor: theme.palette.primary.dark,
                // Reset on touch devices, it doesn't add specificity
                '@media (hover: none)': {
                    backgroundColor: theme.palette.primary.main
                }
            }
        },
        /* Styles applied to the root element if `color="secondary"`. */ secondary: {
            color: theme.palette.secondary.contrastText,
            backgroundColor: theme.palette.secondary.main,
            '&:hover': {
                backgroundColor: theme.palette.secondary.dark,
                // Reset on touch devices, it doesn't add specificity
                '@media (hover: none)': {
                    backgroundColor: theme.palette.secondary.main
                }
            }
        },
        /* Styles applied to the root element if `variant="extended"`. */ extended: {
            borderRadius: 24,
            padding: '0 16px',
            width: 'auto',
            minHeight: 'auto',
            minWidth: 48,
            height: 48,
            '&$sizeSmall': {
                width: 'auto',
                padding: '0 8px',
                borderRadius: 17,
                minWidth: 34,
                height: 34
            },
            '&$sizeMedium': {
                width: 'auto',
                padding: '0 16px',
                borderRadius: 20,
                minWidth: 40,
                height: 40
            }
        },
        /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */ focusVisible: {
        },
        /* Pseudo-class applied to the root element if `disabled={true}`. */ disabled: {
        },
        /* Styles applied to the root element if `color="inherit"`. */ colorInherit: {
            color: 'inherit'
        },
        /* Styles applied to the root element if `size="small"``. */ sizeSmall: {
            width: 40,
            height: 40
        },
        /* Styles applied to the root element if `size="medium"``. */ sizeMedium: {
            width: 48,
            height: 48
        }
    };
};
var $821c5a1aa10def40e534331978376949$var$Fab = /*#__PURE__*/ $821c5a1aa10def40e534331978376949$import$f02ba03fc070e88c$ac92bb288368c37c(function Fab(props, ref) {
    var children = props.children, classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? 'default' : _props$color, _props$component = props.component, component = _props$component === void 0 ? 'button' : _props$component, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$disableFocusRi = props.disableFocusRipple, disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi, focusVisibleClassName = props.focusVisibleClassName, _props$size = props.size, size = _props$size === void 0 ? 'large' : _props$size, _props$variant = props.variant, variant = _props$variant === void 0 ? 'circular' : _props$variant, other = $821c5a1aa10def40e534331978376949$import$e114c77af6cc4d77$9099ad97b570f7c(props, [
        "children",
        "classes",
        "className",
        "color",
        "component",
        "disabled",
        "disableFocusRipple",
        "focusVisibleClassName",
        "size",
        "variant"
    ]);
    return(/*#__PURE__*/ $821c5a1aa10def40e534331978376949$import$f02ba03fc070e88c$2f8418d37d4320b9($821c5a1aa10def40e534331978376949$import$b113eefa2a2d89da$9099ad97b570f7c, $821c5a1aa10def40e534331978376949$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
        className: $821c5a1aa10def40e534331978376949$import$3e54c96927a352a4$9099ad97b570f7c(classes.root, className, size !== 'large' && classes["size".concat($821c5a1aa10def40e534331978376949$import$f35500a7ba1578c4$9099ad97b570f7c(size))], disabled && classes.disabled, variant === 'extended' && classes.extended, {
            'primary': classes.primary,
            'secondary': classes.secondary,
            'inherit': classes.colorInherit
        }[color]),
        component: component,
        disabled: disabled,
        focusRipple: !disableFocusRipple,
        focusVisibleClassName: $821c5a1aa10def40e534331978376949$import$3e54c96927a352a4$9099ad97b570f7c(classes.focusVisible, focusVisibleClassName),
        ref: ref
    }, other), /*#__PURE__*/ $821c5a1aa10def40e534331978376949$import$f02ba03fc070e88c$2f8418d37d4320b9("span", {
        className: classes.label
    }, children)));
});
var $821c5a1aa10def40e534331978376949$export$9099ad97b570f7c = $821c5a1aa10def40e534331978376949$import$abdf0c7fda13cc01$9099ad97b570f7c($821c5a1aa10def40e534331978376949$export$1155669653ed4fad, {
    name: 'MuiFab'
})($821c5a1aa10def40e534331978376949$var$Fab);
