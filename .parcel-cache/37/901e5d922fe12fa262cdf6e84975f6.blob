import   "3147b94c4190f9dd0c1db369bf3550ab:is-in-browser";
import   "3147b94c4190f9dd0c1db369bf3550ab:@babel/runtime/helpers/esm/toConsumableArray";
// Export javascript style and css style vendor prefixes.
var $3147b94c4190f9dd0c1db369bf3550ab$var$js = '';
var $3147b94c4190f9dd0c1db369bf3550ab$var$css = '';
var $3147b94c4190f9dd0c1db369bf3550ab$var$vendor = '';
var $3147b94c4190f9dd0c1db369bf3550ab$var$browser = '';
var $3147b94c4190f9dd0c1db369bf3550ab$var$isTouch = $3147b94c4190f9dd0c1db369bf3550ab$import$82d7de3e737a9230$9099ad97b570f7c && 'ontouchstart' in document.documentElement; // We should not do anything if required serverside.
if ($3147b94c4190f9dd0c1db369bf3550ab$import$82d7de3e737a9230$9099ad97b570f7c) {
    // Order matters. We need to check Webkit the last one because
    // other vendors use to add Webkit prefixes to some properties
    var $3147b94c4190f9dd0c1db369bf3550ab$var$jsCssMap = {
        Moz: '-moz-',
        ms: '-ms-',
        O: '-o-',
        Webkit: '-webkit-'
    };
    var $3147b94c4190f9dd0c1db369bf3550ab$var$_document$createEleme = document.createElement('p'), $3147b94c4190f9dd0c1db369bf3550ab$var$style = $3147b94c4190f9dd0c1db369bf3550ab$var$_document$createEleme.style;
    var $3147b94c4190f9dd0c1db369bf3550ab$var$testProp = 'Transform';
    for(var $3147b94c4190f9dd0c1db369bf3550ab$var$key in $3147b94c4190f9dd0c1db369bf3550ab$var$jsCssMap)if ($3147b94c4190f9dd0c1db369bf3550ab$var$key + $3147b94c4190f9dd0c1db369bf3550ab$var$testProp in $3147b94c4190f9dd0c1db369bf3550ab$var$style) {
        $3147b94c4190f9dd0c1db369bf3550ab$var$js = $3147b94c4190f9dd0c1db369bf3550ab$var$key;
        $3147b94c4190f9dd0c1db369bf3550ab$var$css = $3147b94c4190f9dd0c1db369bf3550ab$var$jsCssMap[$3147b94c4190f9dd0c1db369bf3550ab$var$key];
        break;
    }
     // Correctly detect the Edge browser.
    if ($3147b94c4190f9dd0c1db369bf3550ab$var$js === 'Webkit' && 'msHyphens' in $3147b94c4190f9dd0c1db369bf3550ab$var$style) {
        $3147b94c4190f9dd0c1db369bf3550ab$var$js = 'ms';
        $3147b94c4190f9dd0c1db369bf3550ab$var$css = $3147b94c4190f9dd0c1db369bf3550ab$var$jsCssMap.ms;
        $3147b94c4190f9dd0c1db369bf3550ab$var$browser = 'edge';
    } // Correctly detect the Safari browser.
    if ($3147b94c4190f9dd0c1db369bf3550ab$var$js === 'Webkit' && '-apple-trailing-word' in $3147b94c4190f9dd0c1db369bf3550ab$var$style) $3147b94c4190f9dd0c1db369bf3550ab$var$vendor = 'apple';
}
/**
 * Vendor prefix string for the current browser.
 *
 * @type {{js: String, css: String, vendor: String, browser: String}}
 * @api public
 */ var $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa = {
    js: $3147b94c4190f9dd0c1db369bf3550ab$var$js,
    css: $3147b94c4190f9dd0c1db369bf3550ab$var$css,
    vendor: $3147b94c4190f9dd0c1db369bf3550ab$var$vendor,
    browser: $3147b94c4190f9dd0c1db369bf3550ab$var$browser,
    isTouch: $3147b94c4190f9dd0c1db369bf3550ab$var$isTouch
};
/**
 * Test if a keyframe at-rule should be prefixed or not
 *
 * @param {String} vendor prefix string for the current browser.
 * @return {String}
 * @api public
 */ function $3147b94c4190f9dd0c1db369bf3550ab$export$fb0d3767ee4de1e0(key) {
    // Keyframes is already prefixed. e.g. key = '@-webkit-keyframes a'
    if (key[1] === '-') return key; // No need to prefix IE/Edge. Older browsers will ignore unsupported rules.
    // https://caniuse.com/#search=keyframes
    if ($3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.js === 'ms') return key;
    return "@" + $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.css + "keyframes" + key.substr(10);
}
// https://caniuse.com/#search=appearance
var $3147b94c4190f9dd0c1db369bf3550ab$var$appearence = {
    noPrefill: [
        'appearance'
    ],
    supportedProperty: function supportedProperty(prop) {
        if (prop !== 'appearance') return false;
        if ($3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.js === 'ms') return "-webkit-" + prop;
        return $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.css + prop;
    }
};
// https://caniuse.com/#search=color-adjust
var $3147b94c4190f9dd0c1db369bf3550ab$var$colorAdjust = {
    noPrefill: [
        'color-adjust'
    ],
    supportedProperty: function supportedProperty(prop) {
        if (prop !== 'color-adjust') return false;
        if ($3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.js === 'Webkit') return $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.css + "print-" + prop;
        return prop;
    }
};
var $3147b94c4190f9dd0c1db369bf3550ab$var$regExp = /[-\s]+(.)?/g;
/**
 * Replaces the letter with the capital letter
 *
 * @param {String} match
 * @param {String} c
 * @return {String}
 * @api private
 */ function $3147b94c4190f9dd0c1db369bf3550ab$var$toUpper(match, c) {
    return c ? c.toUpperCase() : '';
}
/**
 * Convert dash separated strings to camel-cased.
 *
 * @param {String} str
 * @return {String}
 * @api private
 */ function $3147b94c4190f9dd0c1db369bf3550ab$var$camelize(str) {
    return str.replace($3147b94c4190f9dd0c1db369bf3550ab$var$regExp, $3147b94c4190f9dd0c1db369bf3550ab$var$toUpper);
}
/**
 * Convert dash separated strings to pascal cased.
 *
 * @param {String} str
 * @return {String}
 * @api private
 */ function $3147b94c4190f9dd0c1db369bf3550ab$var$pascalize(str) {
    return $3147b94c4190f9dd0c1db369bf3550ab$var$camelize("-" + str);
}
// but we can use a longhand property instead.
// https://caniuse.com/#search=mask
var $3147b94c4190f9dd0c1db369bf3550ab$var$mask = {
    noPrefill: [
        'mask'
    ],
    supportedProperty: function supportedProperty(prop, style) {
        if (!/^mask/.test(prop)) return false;
        if ($3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.js === 'Webkit') {
            var longhand = 'mask-image';
            if ($3147b94c4190f9dd0c1db369bf3550ab$var$camelize(longhand) in style) return prop;
            if ($3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.js + $3147b94c4190f9dd0c1db369bf3550ab$var$pascalize(longhand) in style) return $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.css + prop;
        }
        return prop;
    }
};
// https://caniuse.com/#search=text-orientation
var $3147b94c4190f9dd0c1db369bf3550ab$var$textOrientation = {
    noPrefill: [
        'text-orientation'
    ],
    supportedProperty: function supportedProperty(prop) {
        if (prop !== 'text-orientation') return false;
        if ($3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.vendor === 'apple' && !$3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.isTouch) return $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.css + prop;
        return prop;
    }
};
// https://caniuse.com/#search=transform
var $3147b94c4190f9dd0c1db369bf3550ab$var$transform = {
    noPrefill: [
        'transform'
    ],
    supportedProperty: function supportedProperty(prop, style, options) {
        if (prop !== 'transform') return false;
        if (options.transform) return prop;
        return $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.css + prop;
    }
};
// https://caniuse.com/#search=transition
var $3147b94c4190f9dd0c1db369bf3550ab$var$transition = {
    noPrefill: [
        'transition'
    ],
    supportedProperty: function supportedProperty(prop, style, options) {
        if (prop !== 'transition') return false;
        if (options.transition) return prop;
        return $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.css + prop;
    }
};
// https://caniuse.com/#search=writing-mode
var $3147b94c4190f9dd0c1db369bf3550ab$var$writingMode = {
    noPrefill: [
        'writing-mode'
    ],
    supportedProperty: function supportedProperty(prop) {
        if (prop !== 'writing-mode') return false;
        if ($3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.js === 'Webkit' || $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.js === 'ms' && $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.browser !== 'edge') return $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.css + prop;
        return prop;
    }
};
// https://caniuse.com/#search=user-select
var $3147b94c4190f9dd0c1db369bf3550ab$var$userSelect = {
    noPrefill: [
        'user-select'
    ],
    supportedProperty: function supportedProperty(prop) {
        if (prop !== 'user-select') return false;
        if ($3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.js === 'Moz' || $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.js === 'ms' || $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.vendor === 'apple') return $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.css + prop;
        return prop;
    }
};
// https://caniuse.com/#search=multicolumn
// https://github.com/postcss/autoprefixer/issues/491
// https://github.com/postcss/autoprefixer/issues/177
var $3147b94c4190f9dd0c1db369bf3550ab$var$breakPropsOld = {
    supportedProperty: function supportedProperty(prop, style) {
        if (!/^break-/.test(prop)) return false;
        if ($3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.js === 'Webkit') {
            var jsProp = "WebkitColumn" + $3147b94c4190f9dd0c1db369bf3550ab$var$pascalize(prop);
            return jsProp in style ? $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.css + "column-" + prop : false;
        }
        if ($3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.js === 'Moz') {
            var _jsProp = "page" + $3147b94c4190f9dd0c1db369bf3550ab$var$pascalize(prop);
            return _jsProp in style ? "page-" + prop : false;
        }
        return false;
    }
};
// See https://github.com/postcss/autoprefixer/issues/324.
var $3147b94c4190f9dd0c1db369bf3550ab$var$inlineLogicalOld = {
    supportedProperty: function supportedProperty(prop, style) {
        if (!/^(border|margin|padding)-inline/.test(prop)) return false;
        if ($3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.js === 'Moz') return prop;
        var newProp = prop.replace('-inline', '');
        return $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.js + $3147b94c4190f9dd0c1db369bf3550ab$var$pascalize(newProp) in style ? $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.css + newProp : false;
    }
};
// Camelization is required because we can't test using.
// CSS syntax for e.g. in FF.
var $3147b94c4190f9dd0c1db369bf3550ab$var$unprefixed = {
    supportedProperty: function supportedProperty(prop, style) {
        return $3147b94c4190f9dd0c1db369bf3550ab$var$camelize(prop) in style ? prop : false;
    }
};
var $3147b94c4190f9dd0c1db369bf3550ab$var$prefixed = {
    supportedProperty: function supportedProperty(prop, style) {
        var pascalized = $3147b94c4190f9dd0c1db369bf3550ab$var$pascalize(prop); // Return custom CSS variable without prefixing.
        if (prop[0] === '-') return prop; // Return already prefixed value without prefixing.
        if (prop[0] === '-' && prop[1] === '-') return prop;
        if ($3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.js + pascalized in style) return $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.css + prop; // Try webkit fallback.
        if ($3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.js !== 'Webkit' && "Webkit" + pascalized in style) return "-webkit-" + prop;
        return false;
    }
};
// https://caniuse.com/#search=scroll-snap
var $3147b94c4190f9dd0c1db369bf3550ab$var$scrollSnap = {
    supportedProperty: function supportedProperty(prop) {
        if (prop.substring(0, 11) !== 'scroll-snap') return false;
        if ($3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.js === 'ms') return "" + $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.css + prop;
        return prop;
    }
};
// https://caniuse.com/#search=overscroll-behavior
var $3147b94c4190f9dd0c1db369bf3550ab$var$overscrollBehavior = {
    supportedProperty: function supportedProperty(prop) {
        if (prop !== 'overscroll-behavior') return false;
        if ($3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.js === 'ms') return $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.css + "scroll-chaining";
        return prop;
    }
};
var $3147b94c4190f9dd0c1db369bf3550ab$var$propMap = {
    'flex-grow': 'flex-positive',
    'flex-shrink': 'flex-negative',
    'flex-basis': 'flex-preferred-size',
    'justify-content': 'flex-pack',
    order: 'flex-order',
    'align-items': 'flex-align',
    'align-content': 'flex-line-pack'
}; // Support old flex spec from 2012.
var $3147b94c4190f9dd0c1db369bf3550ab$var$flex2012 = {
    supportedProperty: function supportedProperty(prop, style) {
        var newProp = $3147b94c4190f9dd0c1db369bf3550ab$var$propMap[prop];
        if (!newProp) return false;
        return $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.js + $3147b94c4190f9dd0c1db369bf3550ab$var$pascalize(newProp) in style ? $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.css + newProp : false;
    }
};
var $3147b94c4190f9dd0c1db369bf3550ab$var$propMap$1 = {
    flex: 'box-flex',
    'flex-grow': 'box-flex',
    'flex-direction': [
        'box-orient',
        'box-direction'
    ],
    order: 'box-ordinal-group',
    'align-items': 'box-align',
    'flex-flow': [
        'box-orient',
        'box-direction'
    ],
    'justify-content': 'box-pack'
};
var $3147b94c4190f9dd0c1db369bf3550ab$var$propKeys = Object.keys($3147b94c4190f9dd0c1db369bf3550ab$var$propMap$1);
var $3147b94c4190f9dd0c1db369bf3550ab$var$prefixCss = function prefixCss(p) {
    return $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.css + p;
}; // Support old flex spec from 2009.
var $3147b94c4190f9dd0c1db369bf3550ab$var$flex2009 = {
    supportedProperty: function supportedProperty(prop, style, _ref) {
        var multiple = _ref.multiple;
        if ($3147b94c4190f9dd0c1db369bf3550ab$var$propKeys.indexOf(prop) > -1) {
            var newProp = $3147b94c4190f9dd0c1db369bf3550ab$var$propMap$1[prop];
            if (!Array.isArray(newProp)) return $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.js + $3147b94c4190f9dd0c1db369bf3550ab$var$pascalize(newProp) in style ? $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.css + newProp : false;
            if (!multiple) return false;
            for(var i = 0; i < newProp.length; i++){
                if (!($3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.js + $3147b94c4190f9dd0c1db369bf3550ab$var$pascalize(newProp[0]) in style)) return false;
            }
            return newProp.map($3147b94c4190f9dd0c1db369bf3550ab$var$prefixCss);
        }
        return false;
    }
};
// plugins = [
//   ...plugins,
//    breakPropsOld,
//    inlineLogicalOld,
//    unprefixed,
//    prefixed,
//    scrollSnap,
//    flex2012,
//    flex2009
// ]
// Plugins without 'noPrefill' value, going last.
// 'flex-*' plugins should be at the bottom.
// 'flex2009' going after 'flex2012'.
// 'prefixed' going after 'unprefixed'
var $3147b94c4190f9dd0c1db369bf3550ab$var$plugins = [
    $3147b94c4190f9dd0c1db369bf3550ab$var$appearence,
    $3147b94c4190f9dd0c1db369bf3550ab$var$colorAdjust,
    $3147b94c4190f9dd0c1db369bf3550ab$var$mask,
    $3147b94c4190f9dd0c1db369bf3550ab$var$textOrientation,
    $3147b94c4190f9dd0c1db369bf3550ab$var$transform,
    $3147b94c4190f9dd0c1db369bf3550ab$var$transition,
    $3147b94c4190f9dd0c1db369bf3550ab$var$writingMode,
    $3147b94c4190f9dd0c1db369bf3550ab$var$userSelect,
    $3147b94c4190f9dd0c1db369bf3550ab$var$breakPropsOld,
    $3147b94c4190f9dd0c1db369bf3550ab$var$inlineLogicalOld,
    $3147b94c4190f9dd0c1db369bf3550ab$var$unprefixed,
    $3147b94c4190f9dd0c1db369bf3550ab$var$prefixed,
    $3147b94c4190f9dd0c1db369bf3550ab$var$scrollSnap,
    $3147b94c4190f9dd0c1db369bf3550ab$var$overscrollBehavior,
    $3147b94c4190f9dd0c1db369bf3550ab$var$flex2012,
    $3147b94c4190f9dd0c1db369bf3550ab$var$flex2009
];
var $3147b94c4190f9dd0c1db369bf3550ab$var$propertyDetectors = $3147b94c4190f9dd0c1db369bf3550ab$var$plugins.filter(function(p) {
    return p.supportedProperty;
}).map(function(p) {
    return p.supportedProperty;
});
var $3147b94c4190f9dd0c1db369bf3550ab$var$noPrefill = $3147b94c4190f9dd0c1db369bf3550ab$var$plugins.filter(function(p) {
    return p.noPrefill;
}).reduce(function(a, p) {
    a.push.apply(a, $3147b94c4190f9dd0c1db369bf3550ab$import$4d3a86197f512b9$9099ad97b570f7c(p.noPrefill));
    return a;
}, []);
var $3147b94c4190f9dd0c1db369bf3550ab$var$el;
var $3147b94c4190f9dd0c1db369bf3550ab$var$cache = {
};
if ($3147b94c4190f9dd0c1db369bf3550ab$import$82d7de3e737a9230$9099ad97b570f7c) {
    $3147b94c4190f9dd0c1db369bf3550ab$var$el = document.createElement('p'); // We test every property on vendor prefix requirement.
    // Once tested, result is cached. It gives us up to 70% perf boost.
    // http://jsperf.com/element-style-object-access-vs-plain-object
    //
    // Prefill cache with known css properties to reduce amount of
    // properties we need to feature test at runtime.
    // http://davidwalsh.name/vendor-prefix
    var $3147b94c4190f9dd0c1db369bf3550ab$var$computed = window.getComputedStyle(document.documentElement, '');
    for(var $3147b94c4190f9dd0c1db369bf3550ab$var$key$1 in $3147b94c4190f9dd0c1db369bf3550ab$var$computed)// eslint-disable-next-line no-restricted-globals
    if (!isNaN($3147b94c4190f9dd0c1db369bf3550ab$var$key$1)) $3147b94c4190f9dd0c1db369bf3550ab$var$cache[$3147b94c4190f9dd0c1db369bf3550ab$var$computed[$3147b94c4190f9dd0c1db369bf3550ab$var$key$1]] = $3147b94c4190f9dd0c1db369bf3550ab$var$computed[$3147b94c4190f9dd0c1db369bf3550ab$var$key$1];
     // Properties that cannot be correctly detected using the
    // cache prefill method.
    $3147b94c4190f9dd0c1db369bf3550ab$var$noPrefill.forEach(function(x) {
        return delete $3147b94c4190f9dd0c1db369bf3550ab$var$cache[x];
    });
}
/**
 * Test if a property is supported, returns supported property with vendor
 * prefix if required. Returns `false` if not supported.
 *
 * @param {String} prop dash separated
 * @param {Object} [options]
 * @return {String|Boolean}
 * @api public
 */ function $3147b94c4190f9dd0c1db369bf3550ab$export$dbe61327a9dad6eb(prop, options) {
    if (options === void 0) options = {
    };
    // For server-side rendering.
    if (!$3147b94c4190f9dd0c1db369bf3550ab$var$el) return prop; // Remove cache for benchmark tests or return property from the cache.
    if ($3147b94c4190f9dd0c1db369bf3550ab$var$cache[prop] != null) return $3147b94c4190f9dd0c1db369bf3550ab$var$cache[prop];
     // Check if 'transition' or 'transform' natively supported in browser.
    if (prop === 'transition' || prop === 'transform') options[prop] = prop in $3147b94c4190f9dd0c1db369bf3550ab$var$el.style;
     // Find a plugin for current prefix property.
    for(var i = 0; i < $3147b94c4190f9dd0c1db369bf3550ab$var$propertyDetectors.length; i++){
        $3147b94c4190f9dd0c1db369bf3550ab$var$cache[prop] = $3147b94c4190f9dd0c1db369bf3550ab$var$propertyDetectors[i](prop, $3147b94c4190f9dd0c1db369bf3550ab$var$el.style, options); // Break loop, if value found.
        if ($3147b94c4190f9dd0c1db369bf3550ab$var$cache[prop]) break;
    } // Reset styles for current property.
    // Firefox can even throw an error for invalid properties, e.g., "0".
    try {
        $3147b94c4190f9dd0c1db369bf3550ab$var$el.style[prop] = '';
    } catch (err) {
        return false;
    }
    return $3147b94c4190f9dd0c1db369bf3550ab$var$cache[prop];
}
var $3147b94c4190f9dd0c1db369bf3550ab$var$cache$1 = {
};
var $3147b94c4190f9dd0c1db369bf3550ab$var$transitionProperties = {
    transition: 1,
    'transition-property': 1,
    '-webkit-transition': 1,
    '-webkit-transition-property': 1
};
var $3147b94c4190f9dd0c1db369bf3550ab$var$transPropsRegExp = /(^\s*[\w-]+)|, (\s*[\w-]+)(?![^()]*\))/g;
var $3147b94c4190f9dd0c1db369bf3550ab$var$el$1;
/**
 * Returns prefixed value transition/transform if needed.
 *
 * @param {String} match
 * @param {String} p1
 * @param {String} p2
 * @return {String}
 * @api private
 */ function $3147b94c4190f9dd0c1db369bf3550ab$var$prefixTransitionCallback(match, p1, p2) {
    if (p1 === 'var') return 'var';
    if (p1 === 'all') return 'all';
    if (p2 === 'all') return ', all';
    var prefixedValue = p1 ? $3147b94c4190f9dd0c1db369bf3550ab$export$dbe61327a9dad6eb(p1) : ", " + $3147b94c4190f9dd0c1db369bf3550ab$export$dbe61327a9dad6eb(p2);
    if (!prefixedValue) return p1 || p2;
    return prefixedValue;
}
if ($3147b94c4190f9dd0c1db369bf3550ab$import$82d7de3e737a9230$9099ad97b570f7c) $3147b94c4190f9dd0c1db369bf3550ab$var$el$1 = document.createElement('p');
/**
 * Returns prefixed value if needed. Returns `false` if value is not supported.
 *
 * @param {String} property
 * @param {String} value
 * @return {String|Boolean}
 * @api public
 */ function $3147b94c4190f9dd0c1db369bf3550ab$export$63c1c65e65af87b5(property, value) {
    // For server-side rendering.
    var prefixedValue = value;
    if (!$3147b94c4190f9dd0c1db369bf3550ab$var$el$1 || property === 'content') return value; // It is a string or a number as a string like '1'.
    // We want only prefixable values here.
    // eslint-disable-next-line no-restricted-globals
    if (typeof prefixedValue !== 'string' || !isNaN(parseInt(prefixedValue, 10))) return prefixedValue;
     // Create cache key for current value.
    var cacheKey = property + prefixedValue; // Remove cache for benchmark tests or return value from cache.
    if ($3147b94c4190f9dd0c1db369bf3550ab$var$cache$1[cacheKey] != null) return $3147b94c4190f9dd0c1db369bf3550ab$var$cache$1[cacheKey];
     // IE can even throw an error in some cases, for e.g. style.content = 'bar'.
    try {
        // Test value as it is.
        $3147b94c4190f9dd0c1db369bf3550ab$var$el$1.style[property] = prefixedValue;
    } catch (err) {
        // Return false if value not supported.
        $3147b94c4190f9dd0c1db369bf3550ab$var$cache$1[cacheKey] = false;
        return false;
    } // If 'transition' or 'transition-property' property.
    if ($3147b94c4190f9dd0c1db369bf3550ab$var$transitionProperties[property]) prefixedValue = prefixedValue.replace($3147b94c4190f9dd0c1db369bf3550ab$var$transPropsRegExp, $3147b94c4190f9dd0c1db369bf3550ab$var$prefixTransitionCallback);
    else if ($3147b94c4190f9dd0c1db369bf3550ab$var$el$1.style[property] === '') {
        // Value with a vendor prefix.
        prefixedValue = $3147b94c4190f9dd0c1db369bf3550ab$export$9c140b18456c0faa.css + prefixedValue; // Hardcode test to convert "flex" to "-ms-flexbox" for IE10.
        if (prefixedValue === '-ms-flex') $3147b94c4190f9dd0c1db369bf3550ab$var$el$1.style[property] = '-ms-flexbox'; // Test prefixed value.
        $3147b94c4190f9dd0c1db369bf3550ab$var$el$1.style[property] = prefixedValue; // Return false if value not supported.
        if ($3147b94c4190f9dd0c1db369bf3550ab$var$el$1.style[property] === '') {
            $3147b94c4190f9dd0c1db369bf3550ab$var$cache$1[cacheKey] = false;
            return false;
        }
    } // Reset styles for current property.
    $3147b94c4190f9dd0c1db369bf3550ab$var$el$1.style[property] = ''; // Write current value to cache.
    $3147b94c4190f9dd0c1db369bf3550ab$var$cache$1[cacheKey] = prefixedValue;
    return $3147b94c4190f9dd0c1db369bf3550ab$var$cache$1[cacheKey];
}
