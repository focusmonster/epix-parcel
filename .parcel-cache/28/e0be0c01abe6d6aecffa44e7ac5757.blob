import   "0bc09fe2ee056aa85aa05adfb7c90189:@babel/runtime/helpers/esm/objectWithoutProperties";
import   "0bc09fe2ee056aa85aa05adfb7c90189:@babel/runtime/helpers/esm/defineProperty";
import   "0bc09fe2ee056aa85aa05adfb7c90189:@babel/runtime/helpers/esm/extends";
import   "0bc09fe2ee056aa85aa05adfb7c90189:react";
import   "0bc09fe2ee056aa85aa05adfb7c90189:prop-types";
import   "0bc09fe2ee056aa85aa05adfb7c90189:clsx";
import   "0bc09fe2ee056aa85aa05adfb7c90189:../styles/withStyles";
import   "0bc09fe2ee056aa85aa05adfb7c90189:../ButtonBase";
import   "0bc09fe2ee056aa85aa05adfb7c90189:../utils/capitalize";
import   "0bc09fe2ee056aa85aa05adfb7c90189:../utils/unsupportedProp";
var $0bc09fe2ee056aa85aa05adfb7c90189$export$1155669653ed4fad = function styles(theme) {
    var _extends2;
    return {
        /* Styles applied to the root element. */ root: $0bc09fe2ee056aa85aa05adfb7c90189$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
        }, theme.typography.button, (_extends2 = {
            maxWidth: 264,
            minWidth: 72,
            position: 'relative',
            boxSizing: 'border-box',
            minHeight: 48,
            flexShrink: 0,
            padding: '6px 12px'
        }, $0bc09fe2ee056aa85aa05adfb7c90189$import$1a28daa4a80cb108$9099ad97b570f7c(_extends2, theme.breakpoints.up('sm'), {
            padding: '6px 24px'
        }), $0bc09fe2ee056aa85aa05adfb7c90189$import$1a28daa4a80cb108$9099ad97b570f7c(_extends2, "overflow", 'hidden'), $0bc09fe2ee056aa85aa05adfb7c90189$import$1a28daa4a80cb108$9099ad97b570f7c(_extends2, "whiteSpace", 'normal'), $0bc09fe2ee056aa85aa05adfb7c90189$import$1a28daa4a80cb108$9099ad97b570f7c(_extends2, "textAlign", 'center'), $0bc09fe2ee056aa85aa05adfb7c90189$import$1a28daa4a80cb108$9099ad97b570f7c(_extends2, theme.breakpoints.up('sm'), {
            minWidth: 160
        }), _extends2)),
        /* Styles applied to the root element if both `icon` and `label` are provided. */ labelIcon: {
            minHeight: 72,
            paddingTop: 9,
            '& $wrapper > *:first-child': {
                marginBottom: 6
            }
        },
        /* Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor="inherit"`. */ textColorInherit: {
            color: 'inherit',
            opacity: 0.7,
            '&$selected': {
                opacity: 1
            },
            '&$disabled': {
                opacity: 0.5
            }
        },
        /* Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor="primary"`. */ textColorPrimary: {
            color: theme.palette.text.secondary,
            '&$selected': {
                color: theme.palette.primary.main
            },
            '&$disabled': {
                color: theme.palette.text.disabled
            }
        },
        /* Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor="secondary"`. */ textColorSecondary: {
            color: theme.palette.text.secondary,
            '&$selected': {
                color: theme.palette.secondary.main
            },
            '&$disabled': {
                color: theme.palette.text.disabled
            }
        },
        /* Pseudo-class applied to the root element if `selected={true}` (controlled by the Tabs component). */ selected: {
        },
        /* Pseudo-class applied to the root element if `disabled={true}` (controlled by the Tabs component). */ disabled: {
        },
        /* Styles applied to the root element if `fullWidth={true}` (controlled by the Tabs component). */ fullWidth: {
            flexShrink: 1,
            flexGrow: 1,
            flexBasis: 0,
            maxWidth: 'none'
        },
        /* Styles applied to the root element if `wrapped={true}`. */ wrapped: {
            fontSize: theme.typography.pxToRem(12),
            lineHeight: 1.5
        },
        /* Styles applied to the `icon` and `label`'s wrapper element. */ wrapper: {
            display: 'inline-flex',
            alignItems: 'center',
            justifyContent: 'center',
            width: '100%',
            flexDirection: 'column'
        }
    };
};
var $0bc09fe2ee056aa85aa05adfb7c90189$var$Tab = /*#__PURE__*/ $0bc09fe2ee056aa85aa05adfb7c90189$import$f02ba03fc070e88c$ac92bb288368c37c(function Tab(props, ref) {
    var classes = props.classes, className = props.className, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$disableFocusRi = props.disableFocusRipple, disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi, fullWidth = props.fullWidth, icon = props.icon, indicator = props.indicator, label = props.label, onChange = props.onChange, onClick = props.onClick, onFocus = props.onFocus, selected = props.selected, selectionFollowsFocus = props.selectionFollowsFocus, _props$textColor = props.textColor, textColor = _props$textColor === void 0 ? 'inherit' : _props$textColor, value = props.value, _props$wrapped = props.wrapped, wrapped = _props$wrapped === void 0 ? false : _props$wrapped, other = $0bc09fe2ee056aa85aa05adfb7c90189$import$e114c77af6cc4d77$9099ad97b570f7c(props, [
        "classes",
        "className",
        "disabled",
        "disableFocusRipple",
        "fullWidth",
        "icon",
        "indicator",
        "label",
        "onChange",
        "onClick",
        "onFocus",
        "selected",
        "selectionFollowsFocus",
        "textColor",
        "value",
        "wrapped"
    ]);
    var handleClick = function handleClick1(event) {
        if (onChange) onChange(event, value);
        if (onClick) onClick(event);
    };
    var handleFocus = function handleFocus1(event) {
        if (selectionFollowsFocus && !selected && onChange) onChange(event, value);
        if (onFocus) onFocus(event);
    };
    return(/*#__PURE__*/ $0bc09fe2ee056aa85aa05adfb7c90189$import$f02ba03fc070e88c$2f8418d37d4320b9($0bc09fe2ee056aa85aa05adfb7c90189$import$b113eefa2a2d89da$9099ad97b570f7c, $0bc09fe2ee056aa85aa05adfb7c90189$import$b5eba6ed2ba96e9b$9099ad97b570f7c({
        focusRipple: !disableFocusRipple,
        className: $0bc09fe2ee056aa85aa05adfb7c90189$import$3e54c96927a352a4$9099ad97b570f7c(classes.root, classes["textColor".concat($0bc09fe2ee056aa85aa05adfb7c90189$import$f35500a7ba1578c4$9099ad97b570f7c(textColor))], className, disabled && classes.disabled, selected && classes.selected, label && icon && classes.labelIcon, fullWidth && classes.fullWidth, wrapped && classes.wrapped),
        ref: ref,
        role: "tab",
        "aria-selected": selected,
        disabled: disabled,
        onClick: handleClick,
        onFocus: handleFocus,
        tabIndex: selected ? 0 : -1
    }, other), /*#__PURE__*/ $0bc09fe2ee056aa85aa05adfb7c90189$import$f02ba03fc070e88c$2f8418d37d4320b9("span", {
        className: classes.wrapper
    }, icon, label), indicator));
});
var $0bc09fe2ee056aa85aa05adfb7c90189$export$9099ad97b570f7c = $0bc09fe2ee056aa85aa05adfb7c90189$import$abdf0c7fda13cc01$9099ad97b570f7c($0bc09fe2ee056aa85aa05adfb7c90189$export$1155669653ed4fad, {
    name: 'MuiTab'
})($0bc09fe2ee056aa85aa05adfb7c90189$var$Tab);
